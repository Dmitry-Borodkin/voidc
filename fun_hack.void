{   v_import("function_hack.void"); }

{   v_import("printf.void"); }


//---------------------------------------------------------------------
//- int QWERTY(int, char *);
//---------------------------------------------------------------------
{
    arg0 = v_alloca(v_type_ptr, 2);
    arg1 = v_getelementptr(arg0, 1);

    char_ptr = v_pointer_type(char, 0);

    v_store(int,      arg0);
    v_store(char_ptr, arg1);

    ft = v_function_type(int, arg0, 2, false);

    //-------------------------------------------------------------
    f = v_function_hack("QWERTY", ft);
    //-------------------------------------------------------------

    v_add_parameter_name(f, 0, "num", int);
    v_add_parameter_name(f, 1, "str", char_ptr);
}
{
    printf("QWERTY: %d, %s\n", num, str);

    v_return(num);
}


//---------------------------------------------------------------------
{
    printf("----------------------------------\n");

    num = QWERTY(99, "AAAAAAAAAAAAAAAAAA !!!");

    printf("----------------------------------\n");

    printf("num: %d\n", num);
}


//---------------------------------------------------------------------
//- ...
//---------------------------------------------------------------------
{
    module = LLVMModuleCreateWithName("hello_mod");

    v_set_module(module);       //- Sic!
}


//---------------------------------------------------------------------
{
    hello_ft = v_function_type(void, 0, 0, false);

    //-------------------------------------------------------------
    f = v_function_hack("hello", hello_ft);
    //-------------------------------------------------------------
}
{
    printf("Hello world!\n");
}


//---------------------------------------------------------------------
{
    hello2_ft = v_function_type(void, 0, 0, false);

    //-------------------------------------------------------------
    f = v_function_hack("hello2", hello2_ft);
    //-------------------------------------------------------------
}
{
    printf("Hello2 world!\n");
}


//---------------------------------------------------------------------
{
    module = v_get_module();

    v_set_module(0);

    //-----------------------------------------------------------------
    v_debug_print_module(2);

    voidc_prepare_module_for_jit(module);

    v_verify_module(module);

    //-----------------------------------------------------------------
    PH = v_alloca(LLVMOrcModuleHandle);

    LLVMOrcAddEagerlyCompiledIR(voidc_jit, PH, module,
                                voidc_resolver,
                                0
                               );

}



{   hello();
    hello2();
}


