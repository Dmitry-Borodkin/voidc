//---------------------------------------------------------------------
//- Copyright (C) 2020-2024 Dmitry Borodkin <borodkin.dn@gmail.com>
//- SDPX-License-Identifier: LGPL-3.0-or-later
//---------------------------------------------------------------------
{   voidc_guard_target("voidc_ast.void  must be imported into the voidc target only!");

    v_import("voidc_target.void");
    v_import("voidc_types.void");
    v_import("voidc_util.void");
    v_import("voidc_visitor.void");
}


//---------------------------------------------------------------------
{   v_util_register_itcmep_impl(v_ast_base_t,         "v_ast", "base");

    v_util_register_itcmep_impl(v_ast_unit_t,         "v_ast", "unit");
    v_util_register_itcmep_impl(v_ast_stmt_list_t,    "v_ast", "stmt_list");
    v_util_register_itcmep_impl(v_ast_stmt_t,         "v_ast", "stmt");
    v_util_register_itcmep_impl(v_ast_expr_list_t,    "v_ast", "expr_list");
    v_util_register_itcmep_impl(v_ast_expr_t,         "v_ast", "expr");
    v_util_register_itcmep_impl(v_ast_generic_list_t, "v_ast", "generic_list");

    v_util_register_ast_generic_mkgvgo_impl(v_ast_base_t, "v_ast_", "");
    v_util_register_ast_generic_mkgvgo_impl(v_ast_unit_t, "v_ast_", "unit_");
    v_util_register_ast_generic_mkgvgo_impl(v_ast_stmt_t, "v_ast_", "stmt_");
    v_util_register_ast_generic_mkgvgo_impl(v_ast_expr_t, "v_ast_", "expr_");
}

//---------------------------------------------------------------------
{   v_export_type("v_ast_base_ptr",         v_pointer_type(v_ast_base_t,         0));
    v_export_type("v_ast_unit_ptr",         v_pointer_type(v_ast_unit_t,         0));
    v_export_type("v_ast_stmt_list_ptr",    v_pointer_type(v_ast_stmt_list_t,    0));
    v_export_type("v_ast_stmt_ptr",         v_pointer_type(v_ast_stmt_t,         0));
    v_export_type("v_ast_expr_list_ptr",    v_pointer_type(v_ast_expr_list_t,    0));
    v_export_type("v_ast_expr_ptr",         v_pointer_type(v_ast_expr_t,         0));
    v_export_type("v_ast_generic_list_ptr", v_pointer_type(v_ast_generic_list_t, 0));
}

//---------------------------------------------------------------------
{   typ0 = v_alloca(v_type_ptr, 4);
    typ1 = v_getelementptr(typ0, 1);
    typ2 = v_getelementptr(typ0, 2);
    typ3 = v_getelementptr(typ0, 3);


    //-----------------------------------------------------------------
    v_store(v_ast_stmt_list_ptr, typ0);

    ft = v_function_type(void, typ0, 1, false);

    v_util_register_make_list_nil_impl(v_ast_stmt_list_t, "v_ast_make_list_nil_stmt_list_impl", ft);

//  v_store(v_ast_stmt_list_ptr, typ0);
    v_store(v_ast_stmt_ptr,      typ1);
    v_store(size_t,              typ2);

    ft = v_function_type(void, typ0, 3, false);

    v_util_register_make_list_impl(v_ast_stmt_list_t, "v_ast_make_list_stmt_list_impl", ft);

    v_util_register_list_agsgi_impl(v_ast_stmt_list_t, v_ast_stmt_t, "v_ast", "stmt_list");


    //-----------------------------------------------------------------
    v_store(v_ast_expr_list_ptr, typ0);

    ft = v_function_type(void, typ0, 1, false);

    v_util_register_make_list_nil_impl(v_ast_expr_list_t, "v_ast_make_list_nil_expr_list_impl", ft);

//  v_store(v_ast_expr_list_ptr, typ0);
    v_store(v_ast_expr_ptr,      typ1);
//  v_store(size_t,              typ2);

    ft = v_function_type(void, typ0, 3, false);

    v_util_register_make_list_impl(v_ast_expr_list_t, "v_ast_make_list_expr_list_impl", ft);

    v_util_register_list_agsgi_impl(v_ast_expr_list_t, v_ast_expr_t, "v_ast", "expr_list");


    //-----------------------------------------------------------------
    v_store(v_ast_generic_list_ptr, typ0);
    v_store(v_quark_t,              typ1);

    ft = v_function_type(void, typ0, 2, false);

    v_util_register_make_list_nil_impl(v_ast_generic_list_t, "v_ast_make_list_nil_generic_list_impl", ft);

//  v_store(v_ast_generic_list_ptr, typ0);
//  v_store(v_quark_t,              typ1);
    v_store(v_ast_base_ptr,         typ2);
    v_store(size_t,                 typ3);

    ft = v_function_type(void, typ0, 4, false);

    v_util_register_make_list_impl(v_ast_generic_list_t, "v_ast_make_list_generic_list_impl", ft);

    v_util_register_list_agsgi_impl(v_ast_generic_list_t, v_ast_base_t, "v_ast", "generic_list");
}


//---------------------------------------------------------------------
{   typ0 = v_alloca(v_type_ptr, 6);
    typ1 = v_getelementptr(typ0, 1);
    typ2 = v_getelementptr(typ0, 2);
    typ3 = v_getelementptr(typ0, 3);
    typ4 = v_getelementptr(typ0, 4);
    typ5 = v_getelementptr(typ0, 5);

    char_ptr = v_pointer_type(char, 0);

    size_ptr = v_pointer_type(size_t, 0);


    //-------------------------------------------------------------
    v_store(v_std_any_ptr, typ0);

    ft = v_function_type(v_ast_base_ptr, typ0, 1, false);
    v_export_symbol_type("v_ast_std_any_get_base", ft);

    //-------------------------------------------------------------
    v_store(v_ast_base_ptr, typ0);
    v_store(v_quark_t,      typ1);
    v_store(v_std_any_ptr,  typ2);

    ft = v_function_type(void, typ0, 3, false);
    v_export_symbol_type("v_ast_set_property", ft);

//  v_store(v_ast_base_ptr, typ0);
//  v_store(v_quark_t,      typ1);

    ft = v_function_type(v_std_any_ptr, typ0, 2, false);
    v_export_symbol_type("v_ast_get_property", ft);


    //-------------------------------------------------------------
    v_store(v_ast_unit_ptr,      typ0);             //- (out)
    v_store(v_ast_stmt_list_ptr, typ1);             //-
    v_store(int,                 typ2);             //- line
    v_store(int,                 typ3);             //- column

    ft = v_function_type(void, typ0, 4, false);
    v_export_symbol_type("v_ast_make_unit", ft);

//  v_store(v_ast_unit_ptr, typ0);                  //-

    ft = v_function_type(v_ast_stmt_list_ptr, typ0, 1, false);
    v_export_symbol_type("v_ast_unit_get_stmt_list", ft);

//  v_store(v_ast_unit_ptr, typ0);                  //-

    ft = v_function_type(int, typ0, 1, false);
    v_export_symbol_type("v_ast_unit_get_line",   ft);
    v_export_symbol_type("v_ast_unit_get_column", ft);

    //-------------------------------------------------------------
    v_store(v_ast_stmt_ptr, typ0);                  //- (out)
    v_store(char_ptr,       typ1);                  //- return name or ""
    v_store(v_ast_expr_ptr, typ2);                  //-

    ft = v_function_type(void, typ0, 3, false);
    v_export_symbol_type("v_ast_make_stmt", ft);

//  v_store(v_ast_stmt_ptr, typ0);                  //- (out)
    v_store(v_quark_t,      typ1);                  //- return name or "" (quark)
//  v_store(v_ast_expr_ptr, typ2);                  //-

    ft = v_function_type(void, typ0, 3, false);
    v_export_symbol_type("v_ast_make_stmt_q", ft);

//  v_store(v_ast_stmt_ptr, typ0);                  //-

    ft = v_function_type(char_ptr, typ0, 1, false);
    v_export_symbol_type("v_ast_stmt_get_name", ft);

    ft = v_function_type(v_quark_t, typ0, 1, false);
    v_export_symbol_type("v_ast_stmt_get_name_q", ft);

//  v_store(v_ast_stmt_ptr, typ0);                  //-

    ft = v_function_type(v_ast_expr_ptr, typ0, 1, false);
    v_export_symbol_type("v_ast_stmt_get_expr", ft);

    //-------------------------------------------------------------
    v_store(v_ast_expr_ptr,      typ0);             //- (out)
    v_store(v_ast_expr_ptr,      typ1);             //- function expr
    v_store(v_ast_expr_list_ptr, typ2);             //-

    ft = v_function_type(void, typ0, 3, false);
    v_export_symbol_type("v_ast_make_expr_call", ft);

//  v_store(v_ast_expr_ptr, typ0);                  //-

    ft = v_function_type(v_ast_expr_ptr, typ0, 1, false);
    v_export_symbol_type("v_ast_expr_call_get_fun_expr", ft);

//  v_store(v_ast_expr_ptr, typ0);                  //-

    ft = v_function_type(v_ast_expr_list_ptr, typ0, 1, false);
    v_export_symbol_type("v_ast_expr_call_get_arg_list", ft);

    //-------------------------------------------------------------
    v_store(v_ast_expr_ptr, typ0);                  //- (out)
    v_store(char_ptr,       typ1);                  //-

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_ast_make_expr_identifier", ft);

//  v_store(v_ast_expr_ptr, typ0);                  //- (out)
    v_store(v_quark_t,      typ1);                  //- (quark)

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_ast_make_expr_identifier_q", ft);

//  v_store(v_ast_expr_ptr, typ0);                  //-

    ft = v_function_type(char_ptr, typ0, 1, false);
    v_export_symbol_type("v_ast_expr_identifier_get_name", ft);

    ft = v_function_type(v_quark_t, typ0, 1, false);
    v_export_symbol_type("v_ast_expr_identifier_get_name_q", ft);

    //-------------------------------------------------------------
//  v_store(v_ast_expr_ptr, typ0);                  //- (out)
    v_store(intptr_t,       typ1);                  //-

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_ast_make_expr_integer", ft);

//  v_store(v_ast_expr_ptr, typ0);                  //-

    ft = v_function_type(intptr_t, typ0, 1, false);
    v_export_symbol_type("v_ast_expr_integer_get_number", ft);

    //-------------------------------------------------------------
//  v_store(v_ast_expr_ptr, typ0);                  //- (out)
    v_store(char_ptr,       typ1);                  //-

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_ast_make_expr_string", ft);

//  v_store(v_ast_expr_ptr, typ0);                  //- (out)
//  v_store(char_ptr,       typ1);                  //-
    v_store(size_t,         typ2);                  //-

    ft = v_function_type(void, typ0, 3, false);
    v_export_symbol_type("v_ast_make_expr_string_data", ft);

//  v_store(v_ast_expr_ptr, typ0);                  //-

    ft = v_function_type(char_ptr, typ0, 1, false);
    v_export_symbol_type("v_ast_expr_string_get_string", ft);

//  v_store(v_ast_expr_ptr, typ0);                  //-
    v_store(size_ptr,       typ1);                  //-

    ft = v_function_type(char_ptr, typ0, 2, false);
    v_export_symbol_type("v_ast_expr_string_get_string_data", ft);

    //-------------------------------------------------------------
//  v_store(v_ast_expr_ptr, typ0);                  //- (out)
    v_store(char32_t,       typ1);                  //-

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_ast_make_expr_char", ft);

//  v_store(v_ast_expr_ptr, typ0);                  //-

    ft = v_function_type(char32_t, typ0, 1, false);
    v_export_symbol_type("v_ast_expr_char_get_char", ft);


    //-------------------------------------------------------------
//  v_store(v_ast_expr_ptr, typ0);                  //- (out)
    v_store(v_type_ptr,     typ1);                  //-
    v_store(LLVMValueRef,   typ2);                  //-

    ft = v_function_type(void, typ0, 3, false);
    v_export_symbol_type("v_ast_make_expr_compiled", ft);

//  v_store(v_ast_expr_ptr, typ0);                  //-

    ft = v_function_type(v_type_ptr, typ0, 1, false);
    v_export_symbol_type("v_ast_expr_compiled_get_type", ft);

    ft = v_function_type(LLVMValueRef, typ0, 1, false);
    v_export_symbol_type("v_ast_expr_compiled_get_value", ft);


    //-------------------------------------------------------------
    //- Generics ...
    //-------------------------------------------------------------
    generic_vtable = v_struct_type_named("struct.v_ast_generic_vtable");

    void_ptr = v_pointer_type(void, 0);

    v_store(void_ptr, typ0);                        //- object

    init_ft = v_function_type(void, typ0, 1, false);
    init_p  = v_pointer_type(init_ft, 0);

    term_p = init_p;

    v_store(init_p,    typ0);                       //- init
    v_store(term_p,    typ1);                       //- term
    v_store(v_quark_t, typ2);                       //- method tag

    v_type_struct_set_body(generic_vtable, typ0, 3, 0);
    v_export_type("v_ast_generic_vtable", generic_vtable);

    v_export_type("v_ast_generic_init_fun_t",   init_ft);
    v_export_type("v_ast_generic_term_fun_t",   init_ft);       //- Sic! (init_ft == "term_ft")


    //-------------------------------------------------------------
    //- Visitors ...
    //-------------------------------------------------------------
    v_store(v_ast_base_ptr, typ0);                  //-

    ft = v_function_type(v_quark_t, typ0, 1, false);
    v_export_symbol_type("v_ast_base_get_tag", ft);


    //-------------------------------------------------------------
    q_ref = v_reference_type(v_quark_t, 0);

    v_export_symbol_type("v_ast_stmt_list_tag", q_ref);
    v_export_symbol_type("v_ast_expr_list_tag", q_ref);

    v_export_symbol_type("v_ast_unit_tag",            q_ref);
    v_export_symbol_type("v_ast_stmt_tag",            q_ref);
    v_export_symbol_type("v_ast_expr_call_tag",       q_ref);
    v_export_symbol_type("v_ast_expr_identifier_tag", q_ref);
    v_export_symbol_type("v_ast_expr_integer_tag",    q_ref);
    v_export_symbol_type("v_ast_expr_string_tag",     q_ref);
    v_export_symbol_type("v_ast_expr_char_tag",       q_ref);
    v_export_symbol_type("v_ast_expr_compiled_tag",   q_ref);


    //-------------------------------------------------------------
    v_store(v_ast_base_ptr,    typ0);               //-
    v_store(voidc_visitor_ptr, typ1);               //-

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_ast_accept_visitor", ft);
}


