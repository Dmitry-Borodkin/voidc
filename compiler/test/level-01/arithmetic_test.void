{   v_import("level-00");

    v_import("llvm-c/Core.void");

    v_import("level-01/function_hack.void");
    v_import("level-01/if_then_else.void");
    v_import("level-01/arithmetic.void");
    v_import("level-01/block.void");
}

{   v_import("printf.void");
}

{   voidc_enable_statement_if_then_else();
    voidc_enable_statement_block();
}


{
    v = v_binop(LLVMAdd, 1, 1);
    v = v_binop(LLVMMul, v, v);

    printf("%d\n", v);

    c = v_icmp(LLVMIntUGT, v, 5);

    vc = v_cast(c, int);

    printf("%d\n", vc);
}


{   double = v_f64_type();

    v_add_type("double", double);

    double_ = v_type_get_llvm_type(double);

    half = LLVMConstRealOfString(double_, "0.5");

    v_add_constant("half", double, half);
}

{   f1 = v_cast(1, double);

    v = v_binop(LLVMFAdd, f1, half);
    v = v_binop(LLVMFMul, v, v);

    printf("%g\n", v);

    c = v_fcmp(LLVMRealUGT, v, f1);

    vc = v_cast(c, int);

    printf("%d\n", vc);
}


{   quad = v_f128_type();

    v_add_type("quad", quad);

    quad_ = v_type_get_llvm_type(quad);

    half = LLVMConstRealOfString(quad_, "0.25");

    v_add_constant("half_q", quad, half);
}

{   f1 = v_cast(5, quad);

    v = v_binop(LLVMFAdd, f1, half_q);
    v = v_binop(LLVMFMul, v, v);

    vd = v_cast(v, double);

    printf("%g\n", vd);

    c = v_fcmp(LLVMRealUGT, v, f1);

    vc = v_cast(c, int);

    printf("%d\n", vc);
}


//---------------------------------------------------------------------
//- int fib_helper(int v0, int v1, int n);
//---------------------------------------------------------------------
{   typ0 = v_alloca(v_type_ptr, 3);
    typ1 = v_getelementptr(typ0, 1);
    typ2 = v_getelementptr(typ0, 2);

    v_store(int, typ0);
    v_store(int, typ1);
    v_store(int, typ2);

    ft = v_function_type(int, typ0, 3, false);

    //-----------------------------------------------------------------
    f = v_function_hack("fib_helper", ft);

    v_add_parameter_name(f, 0, "v0", int);
    v_add_parameter_name(f, 1, "v1", int);
    v_add_parameter_name(f, 2, "n",  int);
}
{
    if (n)
    {
        v2 = v_binop(LLVMAdd, v0, v1);

        n1 = v_binop(LLVMSub, n, 1);

        ret = fib_helper(v1, v2, n1);

        v_return(ret);
    }
    else
    {
        v_return(v1);
    }
}

//---------------------------------------------------------------------
//- "uint" fib(int n);
//---------------------------------------------------------------------
{   typ0 = v_alloca(v_type_ptr);

    v_store(int, typ0);

    ft = v_function_type(int, typ0, 1, false);

    //-----------------------------------------------------------------
    f = v_function_hack("fib", ft);

    v_add_parameter_name(f, 0, "n", int);
}
{
    v_return(fib_helper(1, 0, n));      //- Sic!
}


//---------------------------------------------------------------------
{
    n = 47;

    printf("fib(%d): %u\n", n, fib(n));
}



