{   v_import("level-00/voidc_target.void");
    v_import("level-00/voidc_types.void");

    v_import("llvm-c/Core.void");

    v_import("printf.void");
}

{   module = LLVMModuleCreateWithName("hello_mod");

    builder = v_target_get_voidc_builder();

    hello_ft  = v_function_type(void, 0, 0, false);
    hello_ft_ = v_type_get_llvm_type(hello_ft);
    hello_f   = LLVMAddFunction(module, "hello", hello_ft_);

    entry = LLVMAppendBasicBlock(hello_f, "entry");

    LLVMPositionBuilderAtEnd(builder, entry);


    typ_ = v_alloca(LLVMTypeRef);

    char_     = LLVMInt8Type();
    char_ptr_ = LLVMPointerType(char_, 0);

    v_store(char_ptr_, typ_);

    int_ = v_type_get_llvm_type(int);

    printf_ft_ = LLVMFunctionType(int_, typ_, 1, true);
    printf_f   = LLVMAddFunction(module, "printf", printf_ft_);

    str = LLVMBuildGlobalStringPtr(builder, "Hello world!\n", "str");

    arg = v_alloca(LLVMValueRef);

    v_store(str, arg);

    LLVMBuildCall2(builder, printf_ft_, printf_f, arg, 1, "");


    LLVMBuildRetVoid(builder);

    LLVMClearInsertionPosition(builder);

    //-----------------------------------------------------------------
    voidc_prepare_module_for_jit(module);

    //-----------------------------------------------------------------
    msg = LLVMPrintModuleToString(module);

    printf("\n%s\n", msg);

    LLVMDisposeMessage(msg);

    //-----------------------------------------------------------------
    voidc_add_module_to_jit(module);

//  LLVMDisposeModule(module);


    //-----------------------------------------------------------------
    v_add_symbol("hello", hello_ft, 0);
}

{   hello();
}

