//---------------------------------------------------------------------
//- Copyright (C) 2020-2024 Dmitry Borodkin <borodkin.dn@gmail.com>
//- SDPX-License-Identifier: LGPL-3.0-or-later
//---------------------------------------------------------------------
{   voidc_guard_target("vpeg_parser.void  must be imported into the voidc target only!");

    v_import("voidc_target.void");
    v_import("voidc_types.void");
    v_import("voidc_util.void");
    v_import("voidc_quark.void");
}


//---------------------------------------------------------------------
{   v_util_register_itcmep_impl(v_peg_parser_t,   "v_peg", "parser");
    v_util_register_itcmep_impl(v_peg_action_t,   "v_peg", "action");
    v_util_register_itcmep_impl(v_peg_argument_t, "v_peg", "argument");
}

//---------------------------------------------------------------------
{   parser_ptr = v_pointer_type(v_peg_parser_t, 0);
    v_export_type("v_peg_parser_ptr", parser_ptr);

    action_ptr = v_pointer_type(v_peg_action_t, 0);
    v_export_type("v_peg_action_ptr", action_ptr);

    argument_ptr = v_pointer_type(v_peg_argument_t, 0);
    v_export_type("v_peg_argument_ptr", argument_ptr);
}

//---------------------------------------------------------------------
{   v_export_type("v_peg_parser_kind",   int);
    v_export_type("v_peg_action_kind",   int);
    v_export_type("v_peg_argument_kind", int);

    typ = v_alloca(v_type_ptr);

    //-------------------------------------------------------------
    v_store(v_peg_parser_ptr, typ);

    ft = v_function_type(int, typ, 1, false);
    v_export_symbol_type("v_peg_parser_get_kind", ft);

    v_store(v_peg_action_ptr, typ);

    ft = v_function_type(int, typ, 1, false);
    v_export_symbol_type("v_peg_action_get_kind", ft);

    v_store(v_peg_argument_ptr, typ);

    ft = v_function_type(int, typ, 1, false);
    v_export_symbol_type("v_peg_argument_get_kind", ft);

    //-------------------------------------------------------------
    q = v_quark_from_string;

    q_kind = q("v_kind");

    v_util_function_dict_set(v_peg_parser_t,   q_kind, q("v_peg_parser_get_kind"));
    v_util_function_dict_set(v_peg_action_t,   q_kind, q("v_peg_action_get_kind"));
    v_util_function_dict_set(v_peg_argument_t, q_kind, q("v_peg_argument_get_kind"));
}

{   typ0 = v_alloca(v_type_ptr, 4);
    typ1 = v_getelementptr(typ0, 1);
    typ2 = v_getelementptr(typ0, 2);
    typ3 = v_getelementptr(typ0, 3);

    char_ptr = v_pointer_type(char, 0);

    //-------------------------------------------------------------
    v_store(v_peg_parser_ptr, typ0);

    ft = v_function_type(int, typ0, 1, false);
    v_export_symbol_type("v_peg_parser_get_parsers_count", ft);

//  v_store(v_peg_parser_ptr, typ0);
    v_store(v_peg_parser_ptr, typ1);

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_peg_parser_get_parsers", ft);

    //-------------------------------------------------------------
//  v_store(v_peg_parser_ptr, typ0);
//  v_store(v_peg_parser_ptr, typ1);
    v_store(int,              typ2);

    ft = v_function_type(void, typ0, 3, false);

    v_export_symbol_type("v_peg_make_choice_parser",   ft);
    v_export_symbol_type("v_peg_make_sequence_parser", ft);

//  v_store(v_peg_parser_ptr, typ0);
//  v_store(v_peg_parser_ptr, typ1);
    v_store(v_peg_parser_ptr, typ2);

    ft = v_function_type(void, typ0, 3, false);

    v_export_symbol_type("v_peg_choice_parser_append",   ft);
    v_export_symbol_type("v_peg_choice_parser_concat",   ft);
    v_export_symbol_type("v_peg_sequence_parser_append", ft);
    v_export_symbol_type("v_peg_sequence_parser_concat", ft);

    //-------------------------------------------------------------
//  v_store(v_peg_parser_ptr, typ0);
//  v_store(v_peg_parser_ptr, typ1);

    ft = v_function_type(void, typ0, 2, false);

    v_export_symbol_type("v_peg_make_and_parser",      ft);
    v_export_symbol_type("v_peg_make_not_parser",      ft);
    v_export_symbol_type("v_peg_make_question_parser", ft);
    v_export_symbol_type("v_peg_make_star_parser",     ft);
    v_export_symbol_type("v_peg_make_plus_parser",     ft);

    //-------------------------------------------------------------
//  v_store(v_peg_parser_ptr, typ0);
    v_store(char_ptr,         typ1);
//  v_store(v_peg_parser_ptr, typ2);

    ft = v_function_type(void, typ0, 3, false);
    v_export_symbol_type("v_peg_make_catch_variable_parser", ft);

//  v_store(v_peg_parser_ptr, typ0);

    ft = v_function_type(char_ptr, typ0, 1, false);
    v_export_symbol_type("v_peg_catch_variable_parser_get_name", ft);

    //-------------------------------------------------------------
//  v_store(v_peg_parser_ptr, typ0);
    v_store(v_peg_parser_ptr, typ1);

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_peg_make_catch_string_parser", ft);

    //-------------------------------------------------------------
//  v_store(v_peg_parser_ptr, typ0);
    v_store(char_ptr,         typ1);

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_peg_make_identifier_parser", ft);

//  v_store(v_peg_parser_ptr, typ0);

    ft = v_function_type(char_ptr, typ0, 1, false);
    v_export_symbol_type("v_peg_identifier_parser_get_identifier", ft);

    //-------------------------------------------------------------
//  v_store(v_peg_parser_ptr, typ0);
    v_store(int,              typ1);

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_peg_make_backref_parser", ft);

//  v_store(v_peg_parser_ptr, typ0);

    ft = v_function_type(int, typ0, 1, false);
    v_export_symbol_type("v_peg_backref_parser_get_number", ft);

    //-------------------------------------------------------------
//  v_store(v_peg_parser_ptr, typ0);
    v_store(v_peg_action_ptr, typ1);

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_peg_make_action_parser", ft);

//  v_store(v_peg_parser_ptr, typ0);

    ft = v_function_type(v_peg_action_ptr, typ0, 1, false);
    v_export_symbol_type("v_peg_action_parser_get_action", ft);

    //-------------------------------------------------------------
//  v_store(v_peg_parser_ptr, typ0);
    v_store(char_ptr,         typ1);

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_peg_make_literal_parser", ft);

//  v_store(v_peg_parser_ptr, typ0);

    ft = v_function_type(char_ptr, typ0, 1, false);
    v_export_symbol_type("v_peg_literal_parser_get_literal", ft);

    //-------------------------------------------------------------
//  v_store(v_peg_parser_ptr, typ0);
    v_store(char32_t,         typ1);

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_peg_make_character_parser", ft);

//  v_store(v_peg_parser_ptr, typ0);

    ft = v_function_type(char32_t, typ0, 1, false);
    v_export_symbol_type("v_peg_character_parser_get_character", ft);

    //-------------------------------------------------------------
    range_t = v_array_type(char32_t, 2);

    v_export_type("v_peg_class_parser_range_t", range_t);

    range_ptr_t = v_pointer_type(range_t, 0);

//  v_store(v_peg_parser_ptr, typ0);
    v_store(range_ptr_t,      typ1);
    v_store(int,              typ2);

    ft = v_function_type(void, typ0, 3, false);
    v_export_symbol_type("v_peg_make_class_parser", ft);

//  v_store(v_peg_parser_ptr, typ0);

    ft = v_function_type(int, typ0, 1, false);
    v_export_symbol_type("v_peg_class_parser_get_ranges_count", ft);

//  v_store(v_peg_parser_ptr, typ0);

    ft = v_function_type(range_ptr_t, typ0, 1, false);
    v_export_symbol_type("v_peg_class_parser_get_ranges", ft);

    //-------------------------------------------------------------
//  v_store(v_peg_parser_ptr, typ0);

    ft = v_function_type(void, typ0, 1, false);
    v_export_symbol_type("v_peg_make_dot_parser", ft);

    v_store(v_peg_action_ptr,   typ0);
    v_store(char_ptr,           typ1);
    v_store(v_peg_argument_ptr, typ2);
    v_store(int,                typ3);

    //-------------------------------------------------------------
    ft = v_function_type(void, typ0, 4, false);
    v_export_symbol_type("v_peg_make_call_action", ft);

//  v_store(v_peg_action_ptr,   typ0);

    ft = v_function_type(char_ptr, typ0, 1, false);
    v_export_symbol_type("v_peg_call_action_get_function_name", ft);

//  v_store(v_peg_action_ptr,   typ0);

    ft = v_function_type(int, typ0, 1, false);
    v_export_symbol_type("v_peg_call_action_get_arguments_count", ft);

//  v_store(v_peg_action_ptr,   typ0);

    ft = v_function_type(v_peg_argument_ptr, typ0, 1, false);
    v_export_symbol_type("v_peg_call_action_get_arguments", ft);

    //-------------------------------------------------------------
//  v_store(v_peg_action_ptr,   typ0);
    v_store(v_peg_argument_ptr, typ1);

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_peg_make_return_action", ft);

//  v_store(v_peg_action_ptr,   typ0);

    ft = v_function_type(v_peg_argument_ptr, typ0, 1, false);
    v_export_symbol_type("v_peg_return_action_get_argument", ft);

    //-------------------------------------------------------------
    v_store(v_peg_argument_ptr, typ0);
    v_store(char_ptr,           typ1);

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_peg_make_identifier_argument", ft);

//  v_store(v_peg_argument_ptr, typ0);

    ft = v_function_type(char_ptr, typ0, 1, false);
    v_export_symbol_type("v_peg_identifier_argument_get_identifier", ft);

    //-------------------------------------------------------------
//  v_store(v_peg_argument_ptr, typ0);
    v_store(int,                typ1);
    v_store(int,                typ2);

    ft = v_function_type(void, typ0, 3, false);
    v_export_symbol_type("v_peg_make_backref_argument", ft);

//  v_store(v_peg_argument_ptr, typ0);

    ft = v_function_type(int, typ0, 1, false);

    v_export_symbol_type("v_peg_backref_argument_get_number", ft);
    v_export_symbol_type("v_peg_backref_argument_get_kind",   ft);

    //-------------------------------------------------------------
//  v_store(v_peg_argument_ptr, typ0);
    v_store(intptr_t,           typ1);

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_peg_make_integer_argument", ft);

//  v_store(v_peg_argument_ptr, typ0);

    ft = v_function_type(intptr_t, typ0, 1, false);
    v_export_symbol_type("v_peg_integer_argument_get_number", ft);

    //-------------------------------------------------------------
//  v_store(v_peg_argument_ptr, typ0);
    v_store(char_ptr,           typ1);

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_peg_make_literal_argument", ft);

//  v_store(v_peg_argument_ptr, typ0);

    ft = v_function_type(char_ptr, typ0, 1, false);
    v_export_symbol_type("v_peg_literal_argument_get_literal", ft);

    //-------------------------------------------------------------
//  v_store(v_peg_argument_ptr, typ0);
    v_store(char32_t,           typ1);

    ft = v_function_type(void, typ0, 2, false);
    v_export_symbol_type("v_peg_make_character_argument", ft);

//  v_store(v_peg_argument_ptr, typ0);

    ft = v_function_type(char32_t, typ0, 1, false);
    v_export_symbol_type("v_peg_character_argument_get_character", ft);
}


