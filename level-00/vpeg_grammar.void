//---------------------------------------------------------------------
//- Copyright (C) 2020-2022 Dmitry Borodkin <borodkin.dn@gmail.com>
//- SDPX-License-Identifier: LGPL-3.0-or-later
//---------------------------------------------------------------------
{   voidc_guard_target("vpeg_grammar.void  must be imported into the voidc target only!");

    v_import("voidc_target.void");
    v_import("voidc_types.void");
    v_import("voidc_util.void");
    v_import("vpeg_parser.void");
}


//---------------------------------------------------------------------
{   v_util_register_itcmep_impl(v_peg_grammar_t, "v_peg", "grammar");
}

//---------------------------------------------------------------------
{   grammar_ptr = v_pointer_type(v_peg_grammar_t, 0);
    v_export_type("v_peg_grammar_ptr", grammar_ptr);
}

//---------------------------------------------------------------------
{   typ0 = v_alloca(v_type_ptr, 5);
    typ1 = v_getelementptr(typ0, 1);
    typ2 = v_getelementptr(typ0, 2);
    typ3 = v_getelementptr(typ0, 3);
    typ4 = v_getelementptr(typ0, 4);

    char_ptr = v_pointer_type(char, 0);
    int_ptr  = v_pointer_type(int, 0);

    v_store(v_peg_grammar_ptr, typ0);

    ft = v_function_type(void, typ0, 1, false);
    v_export_symbol_type("v_peg_make_grammar", ft);

//  v_store(v_peg_grammar_ptr, typ0);
    v_store(char_ptr,          typ1);
    v_store(int_ptr,           typ2);

    ft = v_function_type(v_peg_parser_ptr, typ0, 3, false);
    v_export_symbol_type("v_peg_grammar_get_parser", ft);

//  v_store(v_peg_grammar_ptr, typ0);
    v_store(v_peg_grammar_ptr, typ1);
    v_store(char_ptr,          typ2);
    v_store(v_peg_parser_ptr,  typ3);
    v_store(int,               typ4);

    ft = v_function_type(void, typ0, 5, false);
    v_export_symbol_type("v_peg_grammar_set_parser", ft);

    ft = v_function_type(void, typ0, 3, false);
    v_export_symbol_type("v_peg_grammar_erase_parser", ft);

    std_any_ptr = v_pointer_type(v_std_any_t, 0);

    v_store(std_any_ptr, typ0);
    v_store(std_any_ptr, typ1);
    v_store(size_t,      typ2);

    grammar_action_ft        = v_function_type(void, typ0, 3, false);
    grammar_action_fun_ptr_t = v_pointer_type(grammar_action_ft, 0);

    v_export_type("v_peg_grammar_action_fun_t", grammar_action_ft);

    v_store(v_peg_grammar_ptr, typ0);
    v_store(char_ptr,          typ1);

    ft = v_function_type(grammar_action_fun_ptr_t, typ0, 2, false);
    v_export_symbol_type("v_peg_grammar_get_action", ft);

//  v_store(v_peg_grammar_ptr,        typ0);
    v_store(v_peg_grammar_ptr,        typ1);
    v_store(char_ptr,                 typ2);
    v_store(grammar_action_fun_ptr_t, typ3);

    ft = v_function_type(void, typ0, 4, false);
    v_export_symbol_type("v_peg_grammar_set_action", ft);

    ft = v_function_type(void, typ0, 3, false);
    v_export_symbol_type("v_peg_grammar_erase_action", ft);

//  v_store(v_peg_grammar_ptr, typ0);
    v_store(char_ptr,          typ1);

    ft = v_function_type(std_any_ptr, typ0, 2, false);
    v_export_symbol_type("v_peg_grammar_get_value", ft);

//  v_store(v_peg_grammar_ptr, typ0);
    v_store(v_peg_grammar_ptr, typ1);
    v_store(char_ptr,          typ2);
    v_store(std_any_ptr,       typ3);

    ft = v_function_type(void, typ0, 4, false);
    v_export_symbol_type("v_peg_grammar_set_value", ft);

    ft = v_function_type(void, typ0, 3, false);
    v_export_symbol_type("v_peg_grammar_erase_value", ft);
}


