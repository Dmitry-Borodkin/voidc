{   v_import("voidc_util.void");
    v_import("voidc_ast.void");
    v_import("vpeg_parser.void");
    v_import("vpeg_grammar.void");
    v_import("vpeg_context.void");

    v_import("function_hack.void");

    v_import("grammar.void");
}

{   v_import("printf.void");
}


//---------------------------------------------------------------------
{
    voidc_enable_statement_grammar();
}


//---------------------------------------------------------------------
//- Tests ...
//---------------------------------------------------------------------


//---------------------------------------------------------------------
//{   v_debug_print_module(1); }
{
    qwe = v_alloca(v_peg_opaque_grammar_sptr);
    v_initialize(qwe);

    v_peg_make_grammar(qwe);


    dot = v_alloca(v_peg_opaque_parser_sptr);
    v_initialize(dot);

    v_peg_make_dot_parser(dot);


    grammar qwe
    {
    actions:
//      q = mk_gr_stmt_action_grammar_action;
        w = 0;

    parsers:
        z = 0;

        s = "qwerty";
        s =* "asd";
        s += "zxc";

        qwerty = ();
        asdfgh = (/);

        as = "a" / !("b" / "c");

        zx = &"a" ("b" "c" "d")? v:"e";

        sd = "q" <"w" "e" "r"> $1 @dot;

        we = 'a' . ;

        a = b c / d (e f)*;

        aa = zzz [qw-r];

        qq = { zxc };
        qq = { $5 };
        qq = { $8e };
        qq = { 999 };
        qq = { "zzz" };
        qq = { 'z' };


        ff = { qaz(a, "q", 8, $1s) };
    }

    v_terminate(dot);
    v_terminate(qwe);
}


//---------------------------------------------------------------------
{
    _v_peg_grammar_action_fun_t = v_find_type("v_peg_grammar_action_fun_t");
    _v_util_std_any_ptr         = v_find_type("v_util_std_any_ptr");
    _size_t                     = v_find_type("size_t");

    //-----------------------------------------------------------------
    f = v_function_hack("mk_test_grammar_action", _v_peg_grammar_action_fun_t);

    v_add_parameter_name(f, 0, "ret",       _v_util_std_any_ptr);
    v_add_parameter_name(f, 1, "any0",      _v_util_std_any_ptr);
    v_add_parameter_name(f, 2, "any_count", _size_t);
}
{
    arg0 = v_alloca(v_ast_opaque_expr_sptr, 2);
    v_initialize(arg0, 2);

    arg1 = v_getelementptr(arg0, 1);

    stmt = v_alloca(v_ast_opaque_stmt_sptr);
    v_initialize(stmt);


    v_ast_make_expr_string(arg0, "Hello test: %s\n");


    arg_sstr = v_std_any_get_pointer(v_util_opaque_std_string, any0);

    arg_str = v_std_string_get(arg_sstr);

    v_ast_make_expr_string(arg1, arg_str);


    v_ast_make_stmt_call(stmt, "", "printf", arg0, 2);


    v_std_any_set_pointer(ret, stmt);


    v_terminate(stmt);
    v_terminate(arg0, 2);
}


//---------------------------------------------------------------------
//{   v_debug_print_module(1); }
{
    any0 = v_alloca(v_util_opaque_std_any);
    v_initialize(any0);

    str0 = v_alloca(v_util_opaque_std_string);
    v_initialize(str0);

    v_std_string_set(str0, "ZZZ");

    v_std_any_set_pointer(any0, str0);


    gr0 = v_alloca(v_peg_opaque_grammar_sptr);
    v_initialize(gr0);

    v_peg_get_grammar(gr0);


    grammar gr0
    {
    values:
        str_test = any0;

    actions:
        mk_test = mk_test_grammar_action;

    parsers:
        stmt += "test" _ ';'    { mk_test(str_test) };
    }

    v_peg_set_grammar(gr0);


    v_terminate(gr0);

    v_terminate(str0);
    v_terminate(any0);
}

//{   v_debug_print_module(1); }
{
    test;
}



