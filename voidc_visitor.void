//---------------------------------------------------------------------
//- Copyright (C) 2020 Dmitry Borodkin <borodkin-dn@yandex.ru>
//- SDPX-License-Identifier: LGPL-3.0-or-later
//---------------------------------------------------------------------
{   v_import("voidc_util.void");
    v_import("voidc_quark.void");
}

{   v_util_register_ircmp_impl(voidc_opaque_visitor_ptr, "voidc", "visitor");
}

{   visitor_ref = LLVMPointerType(voidc_opaque_visitor_ptr, 0);

    v_add_symbol("voidc_visitor_ref", LLVMOpaqueType, visitor_ref);

    v_add_symbol_type("voidc_compiler", voidc_opaque_visitor_ptr);
}


{   arg0 = v_alloca(LLVMTypeRef, 4);
    arg1 = v_getelementptr(arg0, 1);
    arg2 = v_getelementptr(arg0, 2);
    arg3 = v_getelementptr(arg0, 3);

    void_ptr = LLVMPointerType(void, 0);

    v_store(voidc_visitor_ref, arg0);
    v_store(v_quark_t,         arg1);

    fun_t = LLVMFunctionType(void_ptr, arg0, 2, 0);

    v_add_symbol_type("voidc_visitor_get_void_method", fun_t);

    v_store(voidc_visitor_ref, arg1);
    v_store(v_quark_t,         arg2);
    v_store(void_ptr,          arg3);

    fun_t = LLVMFunctionType(void, arg0, 4, 0);

    v_add_symbol_type("voidc_visitor_set_void_method", fun_t);
}


