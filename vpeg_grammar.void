//---------------------------------------------------------------------
//- Copyright (C) 2020 Dmitry Borodkin <borodkin-dn@yandex.ru>
//- SDPX-License-Identifier: LGPL-3.0-or-later
//---------------------------------------------------------------------
{   voidc_guard_import("voidc_grammar.void"); }

{   v_import("voidc_util.void");
}

{   v_util_register_idcmep_impl(v_peg_opaque_parser_ptr,   "v_peg", "parser");
    v_util_register_idcmep_impl(v_peg_opaque_action_ptr,   "v_peg", "action");
    v_util_register_idcmep_impl(v_peg_opaque_argument_ptr, "v_peg", "argument");
    v_util_register_idcmep_impl(v_peg_opaque_grammar_ptr,  "v_peg", "grammar");
}

{   parser_ref = LLVMPointerType(v_peg_opaque_parser_ptr, 0);

    v_add_symbol("v_peg_parser_ref", LLVMOpaqueType, parser_ref);

    action_ref = LLVMPointerType(v_peg_opaque_action_ptr, 0);

    v_add_symbol("v_peg_action_ref", LLVMOpaqueType, action_ref);

    argument_ref = LLVMPointerType(v_peg_opaque_argument_ptr, 0);

    v_add_symbol("v_peg_argument_ref", LLVMOpaqueType, argument_ref);

    grammar_ref = LLVMPointerType(v_peg_opaque_grammar_ptr, 0);

    v_add_symbol("v_peg_grammar_ref", LLVMOpaqueType, grammar_ref);
}

{   v_add_symbol("v_peg_parser_kind",   LLVMOpaqueType, int);
    v_add_symbol("v_peg_action_kind",   LLVMOpaqueType, int);
    v_add_symbol("v_peg_argument_kind", LLVMOpaqueType, int);

    arg = v_alloca(LLVMTypeRef);

    v_store(v_peg_parser_ref, arg);

    fun_t = LLVMFunctionType(int, arg, 1, 0);

    v_add_symbol_type("v_peg_parser_get_kind", fun_t);

    v_store(v_peg_action_ref, arg);

    fun_t = LLVMFunctionType(int, arg, 1, 0);

    v_add_symbol_type("v_peg_action_get_kind", fun_t);

    v_store(v_peg_argument_ref, arg);

    fun_t = LLVMFunctionType(int, arg, 1, 0);

    v_add_symbol_type("v_peg_argument_get_kind", fun_t);

    v_util_function_dict_set(v_util_kind_dict, v_peg_opaque_parser_ptr,   "v_peg_parser_get_kind");
    v_util_function_dict_set(v_util_kind_dict, v_peg_opaque_action_ptr,   "v_peg_action_get_kind");
    v_util_function_dict_set(v_util_kind_dict, v_peg_opaque_argument_ptr, "v_peg_argument_get_kind");
}

{   arg0 = v_alloca(LLVMTypeRef, 5);
    arg1 = v_getelementptr(arg0, 1);
    arg2 = v_getelementptr(arg0, 2);
    arg3 = v_getelementptr(arg0, 3);
    arg4 = v_getelementptr(arg0, 4);

    char_ptr = LLVMPointerType(char, 0);
    int_ptr  = LLVMPointerType(int, 0);

    v_store(v_peg_parser_ref, arg0);

    fun_t = LLVMFunctionType(int, arg0, 1, 0);

    v_add_symbol_type("v_peg_parser_get_parsers_count", fun_t);

    v_store(v_peg_parser_ref, arg1);

    fun_t = LLVMFunctionType(void, arg0, 2, 0);

    v_add_symbol_type("v_peg_parser_get_parsers", fun_t);

    v_store(int, arg2);

    fun_t = LLVMFunctionType(void, arg0, 3, 0);

    v_add_symbol_type("v_peg_make_choice_parser",   fun_t);
    v_add_symbol_type("v_peg_make_sequence_parser", fun_t);

    fun_t = LLVMFunctionType(void, arg0, 2, 0);

    v_add_symbol_type("v_peg_make_and_parser",      fun_t);
    v_add_symbol_type("v_peg_make_not_parser",      fun_t);
    v_add_symbol_type("v_peg_make_question_parser", fun_t);
    v_add_symbol_type("v_peg_make_star_parser",     fun_t);
    v_add_symbol_type("v_peg_make_plus_parser",     fun_t);

    v_store(char_ptr,         arg1);
    v_store(v_peg_parser_ref, arg2);

    fun_t = LLVMFunctionType(void, arg0, 3, 0);

    v_add_symbol_type("v_peg_make_catch_variable_parser", fun_t);

    fun_t = LLVMFunctionType(char_ptr, arg0, 1, 0);

    v_add_symbol_type("v_peg_catch_variable_parser_get_name", fun_t);

    v_store(v_peg_parser_ref, arg1);

    fun_t = LLVMFunctionType(void, arg0, 2, 0);

    v_add_symbol_type("v_peg_make_catch_string_parser", fun_t);

    v_store(char_ptr, arg1);

    fun_t = LLVMFunctionType(void, arg0, 2, 0);

    v_add_symbol_type("v_peg_make_identifier_parser", fun_t);

    fun_t = LLVMFunctionType(char_ptr, arg0, 1, 0);

    v_add_symbol_type("v_peg_identifier_parser_get_identifier", fun_t);

    v_store(int, arg1);

    fun_t = LLVMFunctionType(void, arg0, 2, 0);

    v_add_symbol_type("v_peg_make_backref_parser", fun_t);

    fun_t = LLVMFunctionType(int, arg0, 1, 0);

    v_add_symbol_type("v_peg_backref_parser_get_number", fun_t);

    v_store(v_peg_action_ref, arg1);

    fun_t = LLVMFunctionType(void, arg0, 2, 0);

    v_add_symbol_type("v_peg_make_action_parser",       fun_t);
    v_add_symbol_type("v_peg_action_parser_get_action", fun_t);

    v_store(char_ptr, arg1);

    fun_t = LLVMFunctionType(void, arg0, 2, 0);

    v_add_symbol_type("v_peg_make_literal_parser", fun_t);

    fun_t = LLVMFunctionType(char_ptr, arg0, 1, 0);

    v_add_symbol_type("v_peg_literal_parser_get_literal", fun_t);

    v_store(char32_t, arg1);

    fun_t = LLVMFunctionType(void, arg0, 2, 0);

    v_add_symbol_type("v_peg_make_character_parser", fun_t);

    fun_t = LLVMFunctionType(char32_t, arg0, 1, 0);

    v_add_symbol_type("v_peg_character_parser_get_character", fun_t);

    range_t = LLVMArrayType(char32_t, 2);

    range_ptr_t = LLVMPointerType(range_t, 0);

    v_store(range_ptr_t, arg1);
    v_store(int,         arg2);

    fun_t = LLVMFunctionType(void, arg0, 3, 0);

    v_add_symbol_type("v_peg_make_class_parser", fun_t);

    fun_t = LLVMFunctionType(int, arg0, 1, 0);

    v_add_symbol_type("v_peg_class_parser_get_ranges_count", fun_t);

    fun_t = LLVMFunctionType(void, arg0, 2, 0);

    v_add_symbol_type("v_peg_class_parser_get_ranges", fun_t);

    fun_t = LLVMFunctionType(void, arg0, 1, 0);

    v_add_symbol_type("v_peg_make_dot_parser", fun_t);

    v_store(v_peg_action_ref,   arg0);
    v_store(char_ptr,           arg1);
    v_store(v_peg_argument_ref, arg2);
    v_store(int,                arg3);

    fun_t = LLVMFunctionType(void, arg0, 4, 0);

    v_add_symbol_type("v_peg_make_call_action", fun_t);

    fun_t = LLVMFunctionType(char_ptr, arg0, 1, 0);

    v_add_symbol_type("v_peg_call_action_get_function_name", fun_t);

    fun_t = LLVMFunctionType(int, arg0, 1, 0);

    v_add_symbol_type("v_peg_call_action_get_arguments_count", fun_t);

    v_store(v_peg_argument_ref, arg1);

    fun_t = LLVMFunctionType(int, arg0, 2, 0);

    v_add_symbol_type("v_peg_call_action_get_arguments", fun_t);

    v_add_symbol_type("v_peg_make_return_action",         fun_t);
    v_add_symbol_type("v_peg_return_action_get_argument", fun_t);

    v_store(v_peg_argument_ref, arg0);
    v_store(char_ptr,           arg1);

    fun_t = LLVMFunctionType(void, arg0, 2, 0);

    v_add_symbol_type("v_peg_make_identifier_argument", fun_t);

    fun_t = LLVMFunctionType(char_ptr, arg0, 1, 0);

    v_add_symbol_type("v_peg_identifier_argument_get_identifier", fun_t);

    v_store(int, arg1);
    v_store(int, arg2);

    fun_t = LLVMFunctionType(void, arg0, 3, 0);

    v_add_symbol_type("v_peg_make_backref_argument", fun_t);

    fun_t = LLVMFunctionType(int, arg0, 1, 0);

    v_add_symbol_type("v_peg_backref_argument_get_number", fun_t);
    v_add_symbol_type("v_peg_backref_argument_get_kind",   fun_t);

    v_store(intptr_t, arg1);

    fun_t = LLVMFunctionType(void, arg0, 2, 0);

    v_add_symbol_type("v_peg_make_integer_argument", fun_t);

    fun_t = LLVMFunctionType(intptr_t, arg0, 1, 0);

    v_add_symbol_type("v_peg_integer_argument_get_number", fun_t);

    v_store(char_ptr, arg1);

    fun_t = LLVMFunctionType(void, arg0, 2, 0);

    v_add_symbol_type("v_peg_make_literal_argument", fun_t);

    fun_t = LLVMFunctionType(char_ptr, arg0, 1, 0);

    v_add_symbol_type("v_peg_literal_argument_get_literal", fun_t);

    v_store(char32_t, arg1);

    fun_t = LLVMFunctionType(void, arg0, 2, 0);

    v_add_symbol_type("v_peg_make_character_argument", fun_t);

    fun_t = LLVMFunctionType(char32_t, arg0, 1, 0);

    v_add_symbol_type("v_peg_character_argument_get_character", fun_t);

    v_store(v_peg_grammar_ref, arg0);
    v_store(char_ptr,          arg1);
    v_store(v_peg_parser_ref,  arg2);
    v_store(int_ptr,           arg3);

    fun_t = LLVMFunctionType(void, arg0, 4, 0);

    v_add_symbol_type("v_peg_grammar_get_parser", fun_t);

    v_store(v_peg_grammar_ref, arg1);
    v_store(char_ptr,          arg2);
    v_store(v_peg_parser_ref,  arg3);
    v_store(int,               arg4);

    fun_t = LLVMFunctionType(void, arg0, 5, 0);

    v_add_symbol_type("v_peg_grammar_set_parser", fun_t);

    std_any_ref = LLVMPointerType(v_util_opaque_std_any, 0);

    v_store(std_any_ref, arg0);
    v_store(std_any_ref, arg1);
    v_store(size_t,      arg2);

    grammar_action_fun_t     = LLVMFunctionType(void, arg0, 3, 0);
    grammar_action_fun_ptr_t = LLVMPointerType(grammar_action_fun_t, 0);

    v_store(v_peg_grammar_ref, arg0);
    v_store(char_ptr,          arg1);

    fun_t = LLVMFunctionType(grammar_action_fun_ptr_t, arg0, 2, 0);

    v_add_symbol_type("v_peg_grammar_get_action", fun_t);

    v_store(v_peg_grammar_ref,        arg1);
    v_store(char_ptr,                 arg2);
    v_store(grammar_action_fun_ptr_t, arg3);

    fun_t = LLVMFunctionType(void, arg0, 4, 0);

    v_add_symbol_type("v_peg_grammar_set_action", fun_t);
}


