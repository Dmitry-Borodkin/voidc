//---------------------------------------------------------------------
//- Copyright (C) 2020 Dmitry Borodkin <borodkin-dn@yandex.ru>
//- SDPX-License-Identifier: LGPL-3.0-or-later
//---------------------------------------------------------------------
{   voidc_guard_import("vpeg_grammar.void"); }

{   v_import("vpeg_parser.void");
}

{   v_util_register_itcmep_impl(v_peg_opaque_grammar_ptr, "v_peg", "grammar");
}

{   grammar_ref = LLVMPointerType(v_peg_opaque_grammar_ptr, 0);

    v_add_symbol("v_peg_grammar_ref", LLVMOpaqueType, grammar_ref);
}

{   arg0 = v_alloca(LLVMTypeRef, 5);
    arg1 = v_getelementptr(arg0, 1);
    arg2 = v_getelementptr(arg0, 2);
    arg3 = v_getelementptr(arg0, 3);
    arg4 = v_getelementptr(arg0, 4);

    char_ptr = LLVMPointerType(char, 0);
    int_ptr  = LLVMPointerType(int, 0);

    v_store(v_peg_grammar_ref, arg0);

    fun_t = LLVMFunctionType(void, arg0, 1, 0);

    v_add_symbol_type("v_peg_make_grammar", fun_t);

    v_store(char_ptr,          arg1);
    v_store(v_peg_parser_ref,  arg2);
    v_store(int_ptr,           arg3);

    fun_t = LLVMFunctionType(void, arg0, 4, 0);

    v_add_symbol_type("v_peg_grammar_get_parser", fun_t);

    v_store(v_peg_grammar_ref, arg1);
    v_store(char_ptr,          arg2);
    v_store(v_peg_parser_ref,  arg3);
    v_store(int,               arg4);

    fun_t = LLVMFunctionType(void, arg0, 5, 0);

    v_add_symbol_type("v_peg_grammar_set_parser", fun_t);

    fun_t = LLVMFunctionType(void, arg0, 3, 0);

    v_add_symbol_type("v_peg_grammar_erase_parser", fun_t);

    std_any_ref = LLVMPointerType(v_util_opaque_std_any, 0);

    v_store(std_any_ref, arg0);
    v_store(std_any_ref, arg1);
    v_store(size_t,      arg2);

    grammar_action_fun_t     = LLVMFunctionType(void, arg0, 3, 0);
    grammar_action_fun_ptr_t = LLVMPointerType(grammar_action_fun_t, 0);

    v_add_symbol("v_peg_grammar_action_fun_t", LLVMOpaqueType, grammar_action_fun_t);

    v_store(v_peg_grammar_ref, arg0);
    v_store(char_ptr,          arg1);

    fun_t = LLVMFunctionType(grammar_action_fun_ptr_t, arg0, 2, 0);

    v_add_symbol_type("v_peg_grammar_get_action", fun_t);

    v_store(v_peg_grammar_ref,        arg1);
    v_store(char_ptr,                 arg2);
    v_store(grammar_action_fun_ptr_t, arg3);

    fun_t = LLVMFunctionType(void, arg0, 4, 0);

    v_add_symbol_type("v_peg_grammar_set_action", fun_t);

    fun_t = LLVMFunctionType(void, arg0, 3, 0);

    v_add_symbol_type("v_peg_grammar_erase_action", fun_t);
}


