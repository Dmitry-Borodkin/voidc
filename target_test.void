{   v_import("voidc_target.void");
    v_import("voidc_types.void");

    v_import("llvm-c/Core.void");
}

{   v_import("printf.void"); }


{
    v = v_target_get_voidc_global_ctx();
    t = v_target_get_global_ctx();

    printf("voidc:  %p\n", v);
    printf("target: %p\n", t);
}

{   t = v_find_symbol_type("printf");

    printf("printf type: %p\n", t);
}

{
    int_      = v_type_get_llvm_type(int);
    long_     = v_type_get_llvm_type(long);
    intptr_t_ = v_type_get_llvm_type(intptr_t);

    int_sz_v  = LLVMSizeOf(int_);
    long_sz_v = LLVMSizeOf(long_);
    ptr_sz_v  = LLVMSizeOf(intptr_t_);

    v_add_constant("int_sz",  size_t, int_sz_v);
    v_add_constant("long_sz", size_t, long_sz_v);
    v_add_constant("ptr_sz",  size_t, ptr_sz_v);
}

{
    printf("int_sz:  %lu\n", int_sz);
    printf("long_sz: %lu\n", long_sz);
    printf("ptr_sz:  %lu\n", ptr_sz);
}


{
    gctx = v_target_create_global_ctx(int_sz, long_sz, ptr_sz);

    v_add_symbol("my_gctx", v_target_opaque_global_ctx, gctx);


    lctx = v_target_create_local_ctx("<target test>", gctx);

    v_add_symbol("my_lctx", v_target_opaque_local_ctx, lctx);


    v_target_set_global_ctx(gctx);
}

{
    v = v_target_get_voidc_global_ctx();
    t = v_target_get_global_ctx();

    printf("voidc:  %p\n", v);
    printf("target: %p\n", t);
}


{   t = v_find_symbol_type("printf");

    printf("printf type: %p\n", t);
}

{   char_ptr = v_pointer_type(char, 0);

    arg = v_alloca(v_type_ptr);

    v_store(char_ptr, arg);

    printf_ft = v_function_type(int, arg, 1, true);

    v_export_symbol_type("printf", printf_ft);
}

{   t = v_find_symbol_type("printf");

    printf("printf type: %p\n", t);
}



{
    vctx = v_target_get_voidc_global_ctx();

    v_target_set_global_ctx(vctx);


    v_target_destroy_local_ctx(my_lctx);
    v_target_destroy_global_ctx(my_gctx);
}


