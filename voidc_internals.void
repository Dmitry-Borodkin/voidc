//---------------------------------------------------------------------
//- Copyright (C) 2020 Dmitry Borodkin <borodkin-dn@yandex.ru>
//- SDPX-License-Identifier: LGPL-3.0-or-later
//---------------------------------------------------------------------
{   voidc_guard_import("voidc_internals.void"); }

{   typ0 = v_alloca(v_type_ref, 2);
    typ1 = v_getelementptr(typ0, 1);

    v_store(v_type_ref, typ0);          //- Element type
    v_store(unsigned,   typ1);          //- Address space

    ft = v_function_type(v_type_ref, typ0, 2, false);
    v_add_symbol_type("v_pointer_type", ft);
}

{   char_ptr = v_pointer_type(char, 0);
    void_ptr = v_pointer_type(void, 0);

    typ0 = v_alloca(v_type_ref, 2);
    typ1 = v_getelementptr(typ0, 1);

    v_store(char_ptr, typ0);            //- Symbol name (mangled)
    v_store(void_ptr, typ1);            //- Context for resolver

    type = v_function_type(uint64_t, typ0, 2, false);
    v_add_symbol_type("voidc_resolver", type);

    type = v_struct_type_named("struct.LLVMOpaqueTargetMachine");
    v_add_symbol_type("voidc_target_machine", type);

    type = v_struct_type_named("struct.LLVMOrcOpaqueJITStack");
    v_add_symbol_type("voidc_jit", type);

    type = v_struct_type_named("struct.LLVMOpaquePassManager");
    v_add_symbol_type("voidc_pass_manager", type);
}

