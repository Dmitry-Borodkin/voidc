//---------------------------------------------------------------------
//- Copyright (C) 2020-2021 Dmitry Borodkin <borodkin-dn@yandex.ru>
//- SDPX-License-Identifier: LGPL-3.0-or-later
//---------------------------------------------------------------------

//- Imports ------------------------------------------------
{
    v_import("Error.void");
    v_import("Object.void");
    v_import("TargetMachine.void");
}

//- Types --------------------------------------------------
{
    arg0 = v_alloca(v_type_ptr, 2);
    arg1 = v_getelementptr(arg0, 1);

    v0 = v_struct_type_named("struct.LLVMOrcOpaqueJITStack");
    v1 = v_pointer_type(v0, 0);
    v_store(v1, arg0);
    v2_void = v_find_type("void");
    v3 = v_pointer_type(v2_void, 0);
    v_store(v3, arg1);
    v4_uint64_t = v_find_type("uint64_t");
    v5 = v_function_type(v4_uint64_t, arg0, 2, false);
    v6 = v_pointer_type(v5, 0);
    v_add_symbol("LLVMOrcLazyCompileCallbackFn", voidc_opaque_type, v6);

    v_add_symbol("LLVMOrcModuleHandle", voidc_opaque_type, v4_uint64_t);

    v_add_symbol("LLVMOrcTargetAddress", voidc_opaque_type, v4_uint64_t);

    v7_char = v_find_type("char");
    v8 = v_pointer_type(v7_char, 0);
    v_store(v8, arg0);
    v9 = v_pointer_type(v2_void, 0);
    v_store(v9, arg1);
    v10 = v_function_type(v4_uint64_t, arg0, 2, false);
    v11 = v_pointer_type(v10, 0);
    v_add_symbol("LLVMOrcSymbolResolverFn", voidc_opaque_type, v11);

    v_add_symbol("LLVMOrcJITStackRef", voidc_opaque_type, v1);

}

//- Functions ----------------------------------------------
{
    arg0 = v_alloca(v_type_ptr, 5);
    arg1 = v_getelementptr(arg0, 1);
    arg2 = v_getelementptr(arg0, 2);
    arg3 = v_getelementptr(arg0, 3);
    arg4 = v_getelementptr(arg0, 4);

    v0_LLVMOrcJITStackRef = v_find_type("LLVMOrcJITStackRef");
    v_store(v0_LLVMOrcJITStackRef, arg0);
    v1_LLVMJITEventListenerRef = v_find_type("LLVMJITEventListenerRef");
    v_store(v1_LLVMJITEventListenerRef, arg1);
    v2_void = v_find_type("void");
    v3 = v_function_type(v2_void, arg0, 2, false);
    v_add_symbol_type("LLVMOrcUnregisterJITEventListener", v3);

    v_store(v0_LLVMOrcJITStackRef, arg0);
    v4_LLVMOrcModuleHandle = v_find_type("LLVMOrcModuleHandle");
    v5 = v_pointer_type(v4_LLVMOrcModuleHandle, 0);
    v_store(v5, arg1);
    v6_LLVMMemoryBufferRef = v_find_type("LLVMMemoryBufferRef");
    v_store(v6_LLVMMemoryBufferRef, arg2);
    v7_LLVMOrcSymbolResolverFn = v_find_type("LLVMOrcSymbolResolverFn");
    v_store(v7_LLVMOrcSymbolResolverFn, arg3);
    v8 = v_pointer_type(v2_void, 0);
    v_store(v8, arg4);
    v9_LLVMErrorRef = v_find_type("LLVMErrorRef");
    v10 = v_function_type(v9_LLVMErrorRef, arg0, 5, false);
    v_add_symbol_type("LLVMOrcAddObjectFile", v10);

    v_store(v0_LLVMOrcJITStackRef, arg0);
    v11_char = v_find_type("char");
    v12 = v_pointer_type(v11_char, 0);
    v_store(v12, arg1);
    v13_LLVMOrcTargetAddress = v_find_type("LLVMOrcTargetAddress");
    v_store(v13_LLVMOrcTargetAddress, arg2);
    v14 = v_function_type(v9_LLVMErrorRef, arg0, 3, false);
    v_add_symbol_type("LLVMOrcCreateIndirectStub", v14);

    v_store(v0_LLVMOrcJITStackRef, arg0);
    v15 = v_pointer_type(v4_LLVMOrcModuleHandle, 0);
    v_store(v15, arg1);
    v16_LLVMModuleRef = v_find_type("LLVMModuleRef");
    v_store(v16_LLVMModuleRef, arg2);
    v_store(v7_LLVMOrcSymbolResolverFn, arg3);
    v17 = v_pointer_type(v2_void, 0);
    v_store(v17, arg4);
    v18 = v_function_type(v9_LLVMErrorRef, arg0, 5, false);
    v_add_symbol_type("LLVMOrcAddLazilyCompiledIR", v18);

    v_store(v0_LLVMOrcJITStackRef, arg0);
    v19 = v_pointer_type(v11_char, 0);
    v_store(v19, arg1);
    v_store(v13_LLVMOrcTargetAddress, arg2);
    v20 = v_function_type(v9_LLVMErrorRef, arg0, 3, false);
    v_add_symbol_type("LLVMOrcSetIndirectStubPointer", v20);

    v_store(v0_LLVMOrcJITStackRef, arg0);
    v21 = v_pointer_type(v13_LLVMOrcTargetAddress, 0);
    v_store(v21, arg1);
    v22 = v_pointer_type(v11_char, 0);
    v_store(v22, arg2);
    v23 = v_function_type(v9_LLVMErrorRef, arg0, 3, false);
    v_add_symbol_type("LLVMOrcGetSymbolAddress", v23);

    v_store(v0_LLVMOrcJITStackRef, arg0);
    v24 = v_pointer_type(v4_LLVMOrcModuleHandle, 0);
    v_store(v24, arg1);
    v_store(v16_LLVMModuleRef, arg2);
    v_store(v7_LLVMOrcSymbolResolverFn, arg3);
    v25 = v_pointer_type(v2_void, 0);
    v_store(v25, arg4);
    v26 = v_function_type(v9_LLVMErrorRef, arg0, 5, false);
    v_add_symbol_type("LLVMOrcAddEagerlyCompiledIR", v26);

    v_store(v0_LLVMOrcJITStackRef, arg0);
    v27 = v_pointer_type(v13_LLVMOrcTargetAddress, 0);
    v_store(v27, arg1);
    v_store(v4_LLVMOrcModuleHandle, arg2);
    v28 = v_pointer_type(v11_char, 0);
    v_store(v28, arg3);
    v29 = v_function_type(v9_LLVMErrorRef, arg0, 4, false);
    v_add_symbol_type("LLVMOrcGetSymbolAddressIn", v29);

    v_store(v0_LLVMOrcJITStackRef, arg0);
    v30 = v_function_type(v9_LLVMErrorRef, arg0, 1, false);
    v_add_symbol_type("LLVMOrcDisposeInstance", v30);

    v31 = v_pointer_type(v11_char, 0);
    v_store(v31, arg0);
    v32 = v_function_type(v2_void, arg0, 1, false);
    v_add_symbol_type("LLVMOrcDisposeMangledSymbol", v32);

    v33 = v_pointer_type(v11_char, 0);
    v_store(v0_LLVMOrcJITStackRef, arg0);
    v34 = v_function_type(v33, arg0, 1, false);
    v_add_symbol_type("LLVMOrcGetErrorMsg", v34);

    v_store(v0_LLVMOrcJITStackRef, arg0);
    v35 = v_pointer_type(v11_char, 0);
    v36 = v_pointer_type(v35, 0);
    v_store(v36, arg1);
    v37 = v_pointer_type(v11_char, 0);
    v_store(v37, arg2);
    v38 = v_function_type(v2_void, arg0, 3, false);
    v_add_symbol_type("LLVMOrcGetMangledSymbol", v38);

    v_store(v0_LLVMOrcJITStackRef, arg0);
    v_store(v1_LLVMJITEventListenerRef, arg1);
    v39 = v_function_type(v2_void, arg0, 2, false);
    v_add_symbol_type("LLVMOrcRegisterJITEventListener", v39);

    v_store(v0_LLVMOrcJITStackRef, arg0);
    v_store(v4_LLVMOrcModuleHandle, arg1);
    v40 = v_function_type(v9_LLVMErrorRef, arg0, 2, false);
    v_add_symbol_type("LLVMOrcRemoveModule", v40);

    v41_LLVMTargetMachineRef = v_find_type("LLVMTargetMachineRef");
    v_store(v41_LLVMTargetMachineRef, arg0);
    v42 = v_function_type(v0_LLVMOrcJITStackRef, arg0, 1, false);
    v_add_symbol_type("LLVMOrcCreateInstance", v42);

    v_store(v0_LLVMOrcJITStackRef, arg0);
    v43 = v_pointer_type(v13_LLVMOrcTargetAddress, 0);
    v_store(v43, arg1);
    v44_LLVMOrcLazyCompileCallbackFn = v_find_type("LLVMOrcLazyCompileCallbackFn");
    v_store(v44_LLVMOrcLazyCompileCallbackFn, arg2);
    v45 = v_pointer_type(v2_void, 0);
    v_store(v45, arg3);
    v46 = v_function_type(v9_LLVMErrorRef, arg0, 4, false);
    v_add_symbol_type("LLVMOrcCreateLazyCompileCallback", v46);

}

