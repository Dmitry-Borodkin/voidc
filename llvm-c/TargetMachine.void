//---------------------------------------------------------------------
//- Copyright (C) 2020-2022 Dmitry Borodkin <borodkin.dn@gmail.com>
//- SDPX-License-Identifier: LGPL-3.0-or-later
//---------------------------------------------------------------------

//- Imports ------------------------------------------------
{
    voidc_import("prelude.void");

    v_export_import("Target.void");
    v_export_import("Types.void");
}

//- Values -------------------------------------------------
{
    _int = v_find_type("int");
    llvm_int = v_type_get_llvm_type(_int);

    val = LLVMConstInt(llvm_int, 6, 0);
    v_export_constant("LLVMCodeModelLarge", _int, val);

    val = LLVMConstInt(llvm_int, 1, 0);
    v_export_constant("LLVMRelocStatic", _int, val);

    val = LLVMConstInt(llvm_int, 3, 0);
    v_export_constant("LLVMRelocDynamicNoPic", _int, val);

    val = LLVMConstInt(llvm_int, 3, 0);
    v_export_constant("LLVMCodeGenLevelAggressive", _int, val);

    val = LLVMConstInt(llvm_int, 5, 0);
    v_export_constant("LLVMRelocRWPI", _int, val);

    val = LLVMConstInt(llvm_int, 0, 0);
    v_export_constant("LLVMRelocDefault", _int, val);

    val = LLVMConstInt(llvm_int, 3, 0);
    v_export_constant("LLVMCodeModelSmall", _int, val);

    val = LLVMConstInt(llvm_int, 2, 0);
    v_export_constant("LLVMCodeModelTiny", _int, val);

    val = LLVMConstInt(llvm_int, 4, 0);
    v_export_constant("LLVMRelocROPI", _int, val);

    val = LLVMConstInt(llvm_int, 0, 0);
    v_export_constant("LLVMAssemblyFile", _int, val);

    val = LLVMConstInt(llvm_int, 0, 0);
    v_export_constant("LLVMCodeModelDefault", _int, val);

    val = LLVMConstInt(llvm_int, 1, 0);
    v_export_constant("LLVMCodeGenLevelLess", _int, val);

    val = LLVMConstInt(llvm_int, 1, 0);
    v_export_constant("LLVMCodeModelJITDefault", _int, val);

    val = LLVMConstInt(llvm_int, 2, 0);
    v_export_constant("LLVMRelocPIC", _int, val);

    val = LLVMConstInt(llvm_int, 6, 0);
    v_export_constant("LLVMRelocROPI_RWPI", _int, val);

    val = LLVMConstInt(llvm_int, 1, 0);
    v_export_constant("LLVMObjectFile", _int, val);

    val = LLVMConstInt(llvm_int, 4, 0);
    v_export_constant("LLVMCodeModelKernel", _int, val);

    val = LLVMConstInt(llvm_int, 2, 0);
    v_export_constant("LLVMCodeGenLevelDefault", _int, val);

    val = LLVMConstInt(llvm_int, 5, 0);
    v_export_constant("LLVMCodeModelMedium", _int, val);

    val = LLVMConstInt(llvm_int, 0, 0);
    v_export_constant("LLVMCodeGenLevelNone", _int, val);

}

//- Types --------------------------------------------------
{
    v0_int = v_find_type("int");
    v_export_type("LLVMCodeGenFileType", v0_int);

    v_export_type("LLVMCodeModel", v0_int);

    v_export_type("LLVMCodeGenOptLevel", v0_int);

    v_export_type("LLVMRelocMode", v0_int);

    v1 = v_struct_type_named("struct.LLVMOpaqueTargetMachine");
    v2 = v_pointer_type(v1, 0);
    v_export_type("LLVMTargetMachineRef", v2);

    v3 = v_struct_type_named("struct.LLVMTarget");
    v4 = v_pointer_type(v3, 0);
    v_export_type("LLVMTargetRef", v4);

}

//- Functions ----------------------------------------------
{
    arg0 = v_alloca(v_type_ptr, 7);
    arg1 = v_getelementptr(arg0, 1);
    arg2 = v_getelementptr(arg0, 2);
    arg3 = v_getelementptr(arg0, 3);
    arg4 = v_getelementptr(arg0, 4);
    arg5 = v_getelementptr(arg0, 5);
    arg6 = v_getelementptr(arg0, 6);

    v0_LLVMTargetMachineRef = v_find_type("LLVMTargetMachineRef");
    v_store(v0_LLVMTargetMachineRef, arg0);
    v1_LLVMModuleRef = v_find_type("LLVMModuleRef");
    v_store(v1_LLVMModuleRef, arg1);
    v2_char = v_find_type("char");
    v3 = v_pointer_type(v2_char, 0);
    v_store(v3, arg2);
    v4_LLVMCodeGenFileType = v_find_type("LLVMCodeGenFileType");
    v_store(v4_LLVMCodeGenFileType, arg3);
    v5 = v_pointer_type(v2_char, 0);
    v6 = v_pointer_type(v5, 0);
    v_store(v6, arg4);
    v7_LLVMBool = v_find_type("LLVMBool");
    v8 = v_function_type(v7_LLVMBool, arg0, 5, false);
    v_export_symbol_type("LLVMTargetMachineEmitToFile", v8);

    v9 = v_pointer_type(v2_char, 0);
    v_store(v9, arg0);
    v10_LLVMTargetRef = v_find_type("LLVMTargetRef");
    v11 = v_function_type(v10_LLVMTargetRef, arg0, 1, false);
    v_export_symbol_type("LLVMGetTargetFromName", v11);

    v_store(v10_LLVMTargetRef, arg0);
    v12 = v_pointer_type(v2_char, 0);
    v_store(v12, arg1);
    v13 = v_pointer_type(v2_char, 0);
    v_store(v13, arg2);
    v14 = v_pointer_type(v2_char, 0);
    v_store(v14, arg3);
    v15_LLVMCodeGenOptLevel = v_find_type("LLVMCodeGenOptLevel");
    v_store(v15_LLVMCodeGenOptLevel, arg4);
    v16_LLVMRelocMode = v_find_type("LLVMRelocMode");
    v_store(v16_LLVMRelocMode, arg5);
    v17_LLVMCodeModel = v_find_type("LLVMCodeModel");
    v_store(v17_LLVMCodeModel, arg6);
    v18 = v_function_type(v0_LLVMTargetMachineRef, arg0, 7, false);
    v_export_symbol_type("LLVMCreateTargetMachine", v18);

    v_store(v10_LLVMTargetRef, arg0);
    v19 = v_function_type(v10_LLVMTargetRef, arg0, 1, false);
    v_export_symbol_type("LLVMGetNextTarget", v19);

    v_store(v0_LLVMTargetMachineRef, arg0);
    v20_LLVMPassManagerRef = v_find_type("LLVMPassManagerRef");
    v_store(v20_LLVMPassManagerRef, arg1);
    v21_void = v_find_type("void");
    v22 = v_function_type(v21_void, arg0, 2, false);
    v_export_symbol_type("LLVMAddAnalysisPasses", v22);

    v23 = v_pointer_type(v2_char, 0);
    v_store(v0_LLVMTargetMachineRef, arg0);
    v24 = v_function_type(v23, arg0, 1, false);
    v_export_symbol_type("LLVMGetTargetMachineFeatureString", v24);

    v_store(v10_LLVMTargetRef, arg0);
    v25 = v_function_type(v7_LLVMBool, arg0, 1, false);
    v_export_symbol_type("LLVMTargetHasTargetMachine", v25);

    v26 = v_pointer_type(v2_char, 0);
    v_store(v0_LLVMTargetMachineRef, arg0);
    v27 = v_function_type(v26, arg0, 1, false);
    v_export_symbol_type("LLVMGetTargetMachineTriple", v27);

    v_store(v10_LLVMTargetRef, arg0);
    v28 = v_function_type(v7_LLVMBool, arg0, 1, false);
    v_export_symbol_type("LLVMTargetHasAsmBackend", v28);

    v_store(v0_LLVMTargetMachineRef, arg0);
    v29 = v_function_type(v10_LLVMTargetRef, arg0, 1, false);
    v_export_symbol_type("LLVMGetTargetMachineTarget", v29);

    v_store(v0_LLVMTargetMachineRef, arg0);
    v_store(v1_LLVMModuleRef, arg1);
    v_store(v4_LLVMCodeGenFileType, arg2);
    v30 = v_pointer_type(v2_char, 0);
    v31 = v_pointer_type(v30, 0);
    v_store(v31, arg3);
    v32_LLVMMemoryBufferRef = v_find_type("LLVMMemoryBufferRef");
    v33 = v_pointer_type(v32_LLVMMemoryBufferRef, 0);
    v_store(v33, arg4);
    v34 = v_function_type(v7_LLVMBool, arg0, 5, false);
    v_export_symbol_type("LLVMTargetMachineEmitToMemoryBuffer", v34);

    v_store(v0_LLVMTargetMachineRef, arg0);
    v35_LLVMTargetDataRef = v_find_type("LLVMTargetDataRef");
    v36 = v_function_type(v35_LLVMTargetDataRef, arg0, 1, false);
    v_export_symbol_type("LLVMCreateTargetDataLayout", v36);

    v_store(v0_LLVMTargetMachineRef, arg0);
    v_store(v7_LLVMBool, arg1);
    v37 = v_function_type(v21_void, arg0, 2, false);
    v_export_symbol_type("LLVMSetTargetMachineAsmVerbosity", v37);

    v_store(v0_LLVMTargetMachineRef, arg0);
    v38 = v_function_type(v21_void, arg0, 1, false);
    v_export_symbol_type("LLVMDisposeTargetMachine", v38);

    v39 = v_pointer_type(v2_char, 0);
    v_store(v39, arg0);
    v40 = v_pointer_type(v10_LLVMTargetRef, 0);
    v_store(v40, arg1);
    v41 = v_pointer_type(v2_char, 0);
    v42 = v_pointer_type(v41, 0);
    v_store(v42, arg2);
    v43 = v_function_type(v7_LLVMBool, arg0, 3, false);
    v_export_symbol_type("LLVMGetTargetFromTriple", v43);

    v44 = v_pointer_type(v2_char, 0);
    v45 = v_pointer_type(v2_char, 0);
    v_store(v45, arg0);
    v46 = v_function_type(v44, arg0, 1, false);
    v_export_symbol_type("LLVMNormalizeTargetTriple", v46);

    v47 = v_pointer_type(v2_char, 0);
    v48 = v_function_type(v47, arg0, 0, false);
    v_export_symbol_type("LLVMGetHostCPUName", v48);

    v49 = v_pointer_type(v2_char, 0);
    v50 = v_function_type(v49, arg0, 0, false);
    v_export_symbol_type("LLVMGetHostCPUFeatures", v50);

    v51 = v_pointer_type(v2_char, 0);
    v_store(v0_LLVMTargetMachineRef, arg0);
    v52 = v_function_type(v51, arg0, 1, false);
    v_export_symbol_type("LLVMGetTargetMachineCPU", v52);

    v53 = v_pointer_type(v2_char, 0);
    v_store(v10_LLVMTargetRef, arg0);
    v54 = v_function_type(v53, arg0, 1, false);
    v_export_symbol_type("LLVMGetTargetName", v54);

    v55 = v_pointer_type(v2_char, 0);
    v_store(v10_LLVMTargetRef, arg0);
    v56 = v_function_type(v55, arg0, 1, false);
    v_export_symbol_type("LLVMGetTargetDescription", v56);

    v57 = v_function_type(v10_LLVMTargetRef, arg0, 0, false);
    v_export_symbol_type("LLVMGetFirstTarget", v57);

    v_store(v10_LLVMTargetRef, arg0);
    v58 = v_function_type(v7_LLVMBool, arg0, 1, false);
    v_export_symbol_type("LLVMTargetHasJIT", v58);

    v59 = v_pointer_type(v2_char, 0);
    v60 = v_function_type(v59, arg0, 0, false);
    v_export_symbol_type("LLVMGetDefaultTargetTriple", v60);

}

