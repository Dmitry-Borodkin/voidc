//---------------------------------------------------------------------
//- Copyright (C) 2020 Dmitry Borodkin <borodkin-dn@yandex.ru>
//- SDPX-License-Identifier: LGPL-3.0-or-later
//---------------------------------------------------------------------

//- Imports ------------------------------------------------
{
    voidc_import("prelude.void");
}

//- Types --------------------------------------------------
{
    v0 = v_target_get_llvm_ctx();

    v1 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueBinary");
    v2 = LLVMPointerType(v1, 0);
    v_add_symbol("LLVMBinaryRef", LLVMOpaqueType, v2);

    v3 = LLVMStructCreateNamed(v0, "struct.LLVMOpaquePassManager");
    v4 = LLVMPointerType(v3, 0);
    v_add_symbol("LLVMPassManagerRef", LLVMOpaqueType, v4);

    v5 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueBasicBlock");
    v6 = LLVMPointerType(v5, 0);
    v_add_symbol("LLVMBasicBlockRef", LLVMOpaqueType, v6);

    v7 = LLVMStructCreateNamed(v0, "struct.LLVMComdat");
    v8 = LLVMPointerType(v7, 0);
    v_add_symbol("LLVMComdatRef", LLVMOpaqueType, v8);

    v9 = v_struct_create_named("struct.LLVMOpaqueType");
    v10 = LLVMPointerType(v9, 0);
    v_add_symbol("LLVMTypeRef", LLVMOpaqueType, v10);

    v11_int = v_find_type("int");
    v_add_symbol("LLVMBool", LLVMOpaqueType, v11_int);

    v12 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueMetadata");
    v13 = LLVMPointerType(v12, 0);
    v_add_symbol("LLVMMetadataRef", LLVMOpaqueType, v13);

    v14 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueJITEventListener");
    v15 = LLVMPointerType(v14, 0);
    v_add_symbol("LLVMJITEventListenerRef", LLVMOpaqueType, v15);

    v16 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueValueMetadataEntry");
    v_add_symbol("LLVMValueMetadataEntry", LLVMOpaqueType, v16);

    v17 = LLVMStructCreateNamed(v0, "struct.LLVMOpaquePassRegistry");
    v18 = LLVMPointerType(v17, 0);
    v_add_symbol("LLVMPassRegistryRef", LLVMOpaqueType, v18);

    v19 = v_struct_create_named("struct.LLVMOpaqueModule");
    v20 = LLVMPointerType(v19, 0);
    v_add_symbol("LLVMModuleRef", LLVMOpaqueType, v20);

    v21 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueMemoryBuffer");
    v22 = LLVMPointerType(v21, 0);
    v_add_symbol("LLVMMemoryBufferRef", LLVMOpaqueType, v22);

    v23 = v_struct_create_named("struct.LLVMOpaqueValue");
    v24 = LLVMPointerType(v23, 0);
    v_add_symbol("LLVMValueRef", LLVMOpaqueType, v24);

    v25 = v_struct_create_named("struct.LLVMOpaqueBuilder");
    v26 = LLVMPointerType(v25, 0);
    v_add_symbol("LLVMBuilderRef", LLVMOpaqueType, v26);

    v27 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueAttributeRef");
    v28 = LLVMPointerType(v27, 0);
    v_add_symbol("LLVMAttributeRef", LLVMOpaqueType, v28);

    v29 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueDIBuilder");
    v30 = LLVMPointerType(v29, 0);
    v_add_symbol("LLVMDIBuilderRef", LLVMOpaqueType, v30);

    v31 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueDiagnosticInfo");
    v32 = LLVMPointerType(v31, 0);
    v_add_symbol("LLVMDiagnosticInfoRef", LLVMOpaqueType, v32);

    v33 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueModuleFlagEntry");
    v_add_symbol("LLVMModuleFlagEntry", LLVMOpaqueType, v33);

    v34 = v_struct_create_named("struct.LLVMOpaqueContext");
    v35 = LLVMPointerType(v34, 0);
    v_add_symbol("LLVMContextRef", LLVMOpaqueType, v35);

    v36 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueNamedMDNode");
    v37 = LLVMPointerType(v36, 0);
    v_add_symbol("LLVMNamedMDNodeRef", LLVMOpaqueType, v37);

    v38 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueModuleProvider");
    v39 = LLVMPointerType(v38, 0);
    v_add_symbol("LLVMModuleProviderRef", LLVMOpaqueType, v39);

    v40 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueUse");
    v41 = LLVMPointerType(v40, 0);
    v_add_symbol("LLVMUseRef", LLVMOpaqueType, v41);

}

