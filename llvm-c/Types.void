//---------------------------------------------------------------------
//- Copyright (C) 2020 Dmitry Borodkin <borodkin-dn@yandex.ru>
//- SDPX-License-Identifier: LGPL-3.0-or-later
//---------------------------------------------------------------------

//- Imports ------------------------------------------------
{
    v_import("prelude.void");
}

//- Types --------------------------------------------------
{
    v0 = LLVMGetGlobalContext();
    v1 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueBinary");
    v2 = LLVMPointerType(v1, 0);
    v_add_symbol("LLVMBinaryRef", LLVMOpaqueType, v2);

    v3 = LLVMStructCreateNamed(v0, "struct.LLVMOpaquePassManager");
    v4 = LLVMPointerType(v3, 0);
    v_add_symbol("LLVMPassManagerRef", LLVMOpaqueType, v4);

    v5 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueBasicBlock");
    v6 = LLVMPointerType(v5, 0);
    v_add_symbol("LLVMBasicBlockRef", LLVMOpaqueType, v6);

    v7 = LLVMStructCreateNamed(v0, "struct.LLVMComdat");
    v8 = LLVMPointerType(v7, 0);
    v_add_symbol("LLVMComdatRef", LLVMOpaqueType, v8);

//    v9 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueType");
//    v10 = LLVMPointerType(v9, 0);
//    v_add_symbol("LLVMTypeRef", LLVMOpaqueType, v10);

    v_add_symbol("LLVMBool", LLVMOpaqueType, int);

    v11 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueMetadata");
    v12 = LLVMPointerType(v11, 0);
    v_add_symbol("LLVMMetadataRef", LLVMOpaqueType, v12);

    v13 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueJITEventListener");
    v14 = LLVMPointerType(v13, 0);
    v_add_symbol("LLVMJITEventListenerRef", LLVMOpaqueType, v14);

    v15 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueValueMetadataEntry");
    v_add_symbol("LLVMValueMetadataEntry", LLVMOpaqueType, v15);

    v16 = LLVMStructCreateNamed(v0, "struct.LLVMOpaquePassRegistry");
    v17 = LLVMPointerType(v16, 0);
    v_add_symbol("LLVMPassRegistryRef", LLVMOpaqueType, v17);

//    v18 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueModule");
//    v19 = LLVMPointerType(v18, 0);
//    v_add_symbol("LLVMModuleRef", LLVMOpaqueType, v19);

    v20 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueMemoryBuffer");
    v21 = LLVMPointerType(v20, 0);
    v_add_symbol("LLVMMemoryBufferRef", LLVMOpaqueType, v21);

//    v22 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueValue");
//    v23 = LLVMPointerType(v22, 0);
//    v_add_symbol("LLVMValueRef", LLVMOpaqueType, v23);

    v24 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueBuilder");
    v25 = LLVMPointerType(v24, 0);
    v_add_symbol("LLVMBuilderRef", LLVMOpaqueType, v25);

    v26 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueAttributeRef");
    v27 = LLVMPointerType(v26, 0);
    v_add_symbol("LLVMAttributeRef", LLVMOpaqueType, v27);

    v28 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueDIBuilder");
    v29 = LLVMPointerType(v28, 0);
    v_add_symbol("LLVMDIBuilderRef", LLVMOpaqueType, v29);

    v30 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueDiagnosticInfo");
    v31 = LLVMPointerType(v30, 0);
    v_add_symbol("LLVMDiagnosticInfoRef", LLVMOpaqueType, v31);

    v32 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueModuleFlagEntry");
    v_add_symbol("LLVMModuleFlagEntry", LLVMOpaqueType, v32);

//    v33 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueContext");
//    v34 = LLVMPointerType(v33, 0);
//    v_add_symbol("LLVMContextRef", LLVMOpaqueType, v34);

    v35 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueNamedMDNode");
    v36 = LLVMPointerType(v35, 0);
    v_add_symbol("LLVMNamedMDNodeRef", LLVMOpaqueType, v36);

    v37 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueModuleProvider");
    v38 = LLVMPointerType(v37, 0);
    v_add_symbol("LLVMModuleProviderRef", LLVMOpaqueType, v38);

    v39 = LLVMStructCreateNamed(v0, "struct.LLVMOpaqueUse");
    v40 = LLVMPointerType(v39, 0);
    v_add_symbol("LLVMUseRef", LLVMOpaqueType, v40);

}

