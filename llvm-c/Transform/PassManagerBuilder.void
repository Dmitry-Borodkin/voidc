//- Imports ------------------------------------------------
{
    v_import("llvm-c/Types.void");
}

////- Known types --------------------------------------------
//{
//    v = LLVMInt64Type();
//    v_add_local_symbol("uint64_t", LLVMOpaqueType, v);
//    v_add_local_symbol("uint8_t", LLVMOpaqueType, char);
//    v = LLVMDoubleType();
//    v_add_local_symbol("double", LLVMOpaqueType, v);
//}

//- Types --------------------------------------------------
{
    v0 = LLVMGetGlobalContext();
    v1 = LLVMStructCreateNamed(v0, "struct.LLVMOpaquePassManagerBuilder");
    v2 = LLVMPointerType(v1, 0);
    v_add_symbol_type("LLVMPassManagerBuilderRef", LLVMOpaqueType);
    LLVMAddSymbol("LLVMPassManagerBuilderRef", v2);

}

//- Functions ----------------------------------------------
{
    arg0 = v_array_alloca(LLVMTypeRef, 4);
    arg1 = v_getelementptr(arg0, 1);
    arg2 = v_getelementptr(arg0, 2);
    arg3 = v_getelementptr(arg0, 3);
    v_store(LLVMPassManagerBuilderRef, arg0);
    v_store(LLVMPassManagerRef, arg1);
    v0 = LLVMFunctionType(void, arg0, 2, 0);
    v_add_symbol_type("LLVMPassManagerBuilderPopulateModulePassManager", v0);

    v_store(LLVMPassManagerBuilderRef, arg0);
    v_store(LLVMBool, arg1);
    v1 = LLVMFunctionType(void, arg0, 2, 0);
    v_add_symbol_type("LLVMPassManagerBuilderSetDisableUnrollLoops", v1);

    v_store(LLVMPassManagerBuilderRef, arg0);
    v_store(LLVMPassManagerRef, arg1);
    v2 = LLVMFunctionType(void, arg0, 2, 0);
    v_add_symbol_type("LLVMPassManagerBuilderPopulateFunctionPassManager", v2);

    v_store(LLVMPassManagerBuilderRef, arg0);
    v_store(int, arg1);
    v3 = LLVMFunctionType(void, arg0, 2, 0);
    v_add_symbol_type("LLVMPassManagerBuilderUseInlinerWithThreshold", v3);

    v_store(LLVMPassManagerBuilderRef, arg0);
    v_store(LLVMBool, arg1);
    v4 = LLVMFunctionType(void, arg0, 2, 0);
    v_add_symbol_type("LLVMPassManagerBuilderSetDisableUnitAtATime", v4);

    v_store(LLVMPassManagerBuilderRef, arg0);
    v_store(int, arg1);
    v5 = LLVMFunctionType(void, arg0, 2, 0);
    v_add_symbol_type("LLVMPassManagerBuilderSetSizeLevel", v5);

    v_store(LLVMPassManagerBuilderRef, arg0);
    v6 = LLVMFunctionType(void, arg0, 1, 0);
    v_add_symbol_type("LLVMPassManagerBuilderDispose", v6);

    v7 = LLVMFunctionType(LLVMPassManagerBuilderRef, arg0, 0, 0);
    v_add_symbol_type("LLVMPassManagerBuilderCreate", v7);

    v_store(LLVMPassManagerBuilderRef, arg0);
    v_store(int, arg1);
    v8 = LLVMFunctionType(void, arg0, 2, 0);
    v_add_symbol_type("LLVMPassManagerBuilderSetOptLevel", v8);

    v_store(LLVMPassManagerBuilderRef, arg0);
    v_store(LLVMBool, arg1);
    v9 = LLVMFunctionType(void, arg0, 2, 0);
    v_add_symbol_type("LLVMPassManagerBuilderSetDisableSimplifyLibCalls", v9);

    v_store(LLVMPassManagerBuilderRef, arg0);
    v_store(LLVMPassManagerRef, arg1);
    v_store(LLVMBool, arg2);
    v_store(LLVMBool, arg3);
    v10 = LLVMFunctionType(void, arg0, 4, 0);
    v_add_symbol_type("LLVMPassManagerBuilderPopulateLTOPassManager", v10);

}

