//---------------------------------------------------------------------
//- Copyright (C) 2020 Dmitry Borodkin <borodkin-dn@yandex.ru>
//- SDPX-License-Identifier: LGPL-3.0-or-later
//---------------------------------------------------------------------

//- Imports ------------------------------------------------
{
    v_import("Types.void");
}

//- Functions ----------------------------------------------
{
    arg0 = v_alloca(LLVMTypeRef, 4);
    arg1 = v_getelementptr(arg0, 1);
    arg2 = v_getelementptr(arg0, 2);
    arg3 = v_getelementptr(arg0, 3);

    v0_LLVMModuleRef = v_find_type("LLVMModuleRef");
    v_store(v0_LLVMModuleRef, arg0);
    v1_char = v_find_type("char");
    v2 = LLVMPointerType(v1_char, 0);
    v_store(v2, arg1);
    v3_int = v_find_type("int");
    v4 = LLVMFunctionType(v3_int, arg0, 2, 0);
    v_add_symbol_type("LLVMWriteBitcodeToFile", v4);

    v_store(v0_LLVMModuleRef, arg0);
    v5_LLVMMemoryBufferRef = v_find_type("LLVMMemoryBufferRef");
    v6 = LLVMFunctionType(v5_LLVMMemoryBufferRef, arg0, 1, 0);
    v_add_symbol_type("LLVMWriteBitcodeToMemoryBuffer", v6);

    v_store(v0_LLVMModuleRef, arg0);
    v_store(v3_int, arg1);
    v7 = LLVMFunctionType(v3_int, arg0, 2, 0);
    v_add_symbol_type("LLVMWriteBitcodeToFileHandle", v7);

    v_store(v0_LLVMModuleRef, arg0);
    v_store(v3_int, arg1);
    v_store(v3_int, arg2);
    v_store(v3_int, arg3);
    v8 = LLVMFunctionType(v3_int, arg0, 4, 0);
    v_add_symbol_type("LLVMWriteBitcodeToFD", v8);

}

