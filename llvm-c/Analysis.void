//- Imports ------------------------------------------------
{
    v_import("Types.void");
}

//- Values -------------------------------------------------
{
    val = LLVMConstInt(int, 1, 0);
    v_add_constant("LLVMPrintMessageAction", val);

    val = LLVMConstInt(int, 0, 0);
    v_add_constant("LLVMAbortProcessAction", val);

    val = LLVMConstInt(int, 2, 0);
    v_add_constant("LLVMReturnStatusAction", val);

}

//- Types --------------------------------------------------
{
    v_add_symbol_type("LLVMVerifierFailureAction", LLVMOpaqueType);
    LLVMAddSymbol("LLVMVerifierFailureAction", int);

}

//- Functions ----------------------------------------------
{
    arg0 = v_array_alloca(LLVMTypeRef, 3);
    arg1 = v_getelementptr(arg0, 1);
    arg2 = v_getelementptr(arg0, 2);

    v_store(LLVMValueRef, arg0);
    v0 = LLVMFunctionType(void, arg0, 1, 0);
    v_add_symbol_type("LLVMViewFunctionCFG", v0);

    v_store(LLVMModuleRef, arg0);
    v_store(LLVMVerifierFailureAction, arg1);
    v1 = LLVMPointerType(char, 0);
    v2 = LLVMPointerType(v1, 0);
    v_store(v2, arg2);
    v3 = LLVMFunctionType(LLVMBool, arg0, 3, 0);
    v_add_symbol_type("LLVMVerifyModule", v3);

    v_store(LLVMValueRef, arg0);
    v_store(LLVMVerifierFailureAction, arg1);
    v4 = LLVMFunctionType(LLVMBool, arg0, 2, 0);
    v_add_symbol_type("LLVMVerifyFunction", v4);

    v_store(LLVMValueRef, arg0);
    v5 = LLVMFunctionType(void, arg0, 1, 0);
    v_add_symbol_type("LLVMViewFunctionCFGOnly", v5);

}

