//- Imports ------------------------------------------------
{
    v_import("llvm-c/Types");
}

//- Values -------------------------------------------------
{
    val = LLVMConstInt(int, 1, 0);
    v_add_constant("LLVMPrintMessageAction", val);

    val = LLVMConstInt(int, 0, 0);
    v_add_constant("LLVMAbortProcessAction", val);

    val = LLVMConstInt(int, 2, 0);
    v_add_constant("LLVMReturnStatusAction", val);

}

//- Types --------------------------------------------------
{
    v_add_symbol_type("LLVMVerifierFailureAction", LLVMOpaqueType);
    LLVMAddSymbol("LLVMVerifierFailureAction", int);

}

//- Functions ----------------------------------------------
{
    arg0 = v_array_alloca(LLVMTypeRef, 10);
    arg1 = v_getelementptr(arg0, 1);
    arg2 = v_getelementptr(arg0, 2);
    arg3 = v_getelementptr(arg0, 3);
    arg4 = v_getelementptr(arg0, 4);
    arg5 = v_getelementptr(arg0, 5);
    arg6 = v_getelementptr(arg0, 6);
    arg7 = v_getelementptr(arg0, 7);
    arg8 = v_getelementptr(arg0, 8);
    arg9 = v_getelementptr(arg0, 9);
    v_store(LLVMValueRef, arg0);
    v0 = LLVMFunctionType(void, arg0, 1, 0);
    v_add_symbol_type("LLVMViewFunctionCFG", v0);

    v_store(LLVMModuleRef, arg0);
    v_store(LLVMVerifierFailureAction, arg1);
    v1 = LLVMPointerType(char, 0);
    v2 = LLVMPointerType(v1, 0);
    v_store(v2, arg2);
    v3 = LLVMFunctionType(LLVMBool, arg0, 3, 0);
    v_add_symbol_type("LLVMVerifyModule", v3);

    v_store(LLVMValueRef, arg0);
    v_store(LLVMVerifierFailureAction, arg1);
    v4 = LLVMFunctionType(LLVMBool, arg0, 2, 0);
    v_add_symbol_type("LLVMVerifyFunction", v4);

    v_store(LLVMValueRef, arg0);
    v5 = LLVMFunctionType(void, arg0, 1, 0);
    v_add_symbol_type("LLVMViewFunctionCFGOnly", v5);

}

