//- Imports ------------------------------------------------
{
    v_import("prelude.void");
}

//- Values -------------------------------------------------
{
    val = LLVMConstInt(int, 0, 0);
    v_add_constant("LLVMErrorSuccess", val);
}

//- Types --------------------------------------------------
{
    v0 = LLVMPointerType(void, 0);
    v_add_symbol_type("LLVMErrorTypeId", LLVMOpaqueType);
    LLVMAddSymbol("LLVMErrorTypeId", v0);

    v1 = LLVMGetGlobalContext();
    v2 = LLVMStructCreateNamed(v1, "struct.LLVMOpaqueError");
    v3 = LLVMPointerType(v2, 0);
    v_add_symbol_type("LLVMErrorRef", LLVMOpaqueType);
    LLVMAddSymbol("LLVMErrorRef", v3);

}

//- Functions ----------------------------------------------
{
    arg0 = v_alloca(LLVMTypeRef);

    v0 = LLVMPointerType(char, 0);

    v_store(LLVMErrorRef, arg0);
    v1 = LLVMFunctionType(v0, arg0, 1, 0);
    v_add_symbol_type("LLVMGetErrorMessage", v1);

    v2 = LLVMPointerType(char, 0);
    v_store(v2, arg0);
    v3 = LLVMFunctionType(void, arg0, 1, 0);
    v_add_symbol_type("LLVMDisposeErrorMessage", v3);

    v4 = LLVMFunctionType(LLVMErrorTypeId, arg0, 0, 0);
    v_add_symbol_type("LLVMGetStringErrorTypeId", v4);

    v_store(LLVMErrorRef, arg0);
    v5 = LLVMFunctionType(LLVMErrorTypeId, arg0, 1, 0);
    v_add_symbol_type("LLVMGetErrorTypeId", v5);

    v_store(LLVMErrorRef, arg0);
    v6 = LLVMFunctionType(void, arg0, 1, 0);
    v_add_symbol_type("LLVMConsumeError", v6);

}

